{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import { Container, Grid, Card, CardContent, Typography, Button, TextField, Box } from '@mui/material';\n\n// const Dashboard = () => {\n//     const [jobs, setJobs] = useState([]);\n//     const [searchQuery, setSearchQuery] = useState('');\n\n//     useEffect(() => {\n//         const fetchJobs = async () => {\n//             try {\n//                 const response = await apiClient.get('/jobs');\n//                 setJobs(response.data.data);\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchJobs();\n//     }, []);\n\n//     const filteredJobs = jobs.filter((job) =>\n//         job.title.toLowerCase().includes(searchQuery.toLowerCase())\n//     );\n\n//     return (\n//         <Container\n//             maxWidth=\"lg\"\n//             sx={{\n//                 paddingTop: '80px', // Add padding to account for navbar height\n//             }}\n//         >\n//             <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold' }}>\n//                 Explore Opportunities\n//             </Typography>\n//             <Box sx={{ mb: 3 }}>\n//                 <TextField\n//                     label=\"Search Jobs\"\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     value={searchQuery}\n//                     onChange={(e) => setSearchQuery(e.target.value)}\n//                 />\n//             </Box>\n//             <Grid container spacing={4}>\n//                 {filteredJobs.map((job) => (\n//                     <Grid item xs={12} sm={6} md={4} key={job._id}>\n//                         <Card sx={{ height: '100%' }}>\n//                             <CardContent>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     {job.title}\n//                                 </Typography>\n//                                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                                     {job.description}\n//                                 </Typography>\n//                                 <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>\n//                                     Location: {job.location}\n//                                 </Typography>\n//                                 <Typography variant=\"subtitle2\">\n//                                     Hourly Rate: ${job.hourlyRate}\n//                                 </Typography>\n//                                 <Button\n//                                     variant=\"contained\"\n//                                     color=\"primary\"\n//                                     fullWidth\n//                                     sx={{ mt: 2 }}\n//                                 >\n//                                     Apply Now\n//                                 </Button>\n//                             </CardContent>\n//                         </Card>\n//                     </Grid>\n//                 ))}\n//             </Grid>\n//         </Container>\n//     );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Container, Grid, Card, CardContent, Typography, Button, TextField, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await apiClient.get('/jobs');\n        setJobs(response.data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#E3F2FD',\n      // Light blue color\n      minHeight: '100vh',\n      // Ensure it covers the entire viewport\n      paddingTop: '80px',\n      // Adjust for the navbar height\n      transition: 'background-color 0.5s ease' // Smooth color transition\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        sx: {\n          fontWeight: 'bold',\n          color: '#0D47A1'\n        },\n        children: \"Explore Opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Jobs\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: job.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  mt: 1\n                },\n                children: [\"Location: \", job.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: [\"Hourly Rate: $\", job.hourlyRate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                sx: {\n                  mt: 2\n                },\n                children: \"Apply Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"Tsz2tFEvpifR3d+1qXPPF5vAy/o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","apiClient","Container","Grid","Card","CardContent","Typography","Button","TextField","Box","jsxDEV","_jsxDEV","Dashboard","_s","jobs","setJobs","searchQuery","setSearchQuery","fetchJobs","response","get","data","error","console","filteredJobs","filter","job","title","toLowerCase","includes","sx","backgroundColor","minHeight","paddingTop","transition","children","maxWidth","variant","gutterBottom","align","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","mb","label","fullWidth","value","onChange","e","target","container","spacing","map","item","xs","sm","md","height","description","mt","location","hourlyRate","_id","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import { Container, Grid, Card, CardContent, Typography, Button, TextField, Box } from '@mui/material';\n\n// const Dashboard = () => {\n//     const [jobs, setJobs] = useState([]);\n//     const [searchQuery, setSearchQuery] = useState('');\n\n//     useEffect(() => {\n//         const fetchJobs = async () => {\n//             try {\n//                 const response = await apiClient.get('/jobs');\n//                 setJobs(response.data.data);\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchJobs();\n//     }, []);\n\n//     const filteredJobs = jobs.filter((job) =>\n//         job.title.toLowerCase().includes(searchQuery.toLowerCase())\n//     );\n\n//     return (\n//         <Container\n//             maxWidth=\"lg\"\n//             sx={{\n//                 paddingTop: '80px', // Add padding to account for navbar height\n//             }}\n//         >\n//             <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold' }}>\n//                 Explore Opportunities\n//             </Typography>\n//             <Box sx={{ mb: 3 }}>\n//                 <TextField\n//                     label=\"Search Jobs\"\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     value={searchQuery}\n//                     onChange={(e) => setSearchQuery(e.target.value)}\n//                 />\n//             </Box>\n//             <Grid container spacing={4}>\n//                 {filteredJobs.map((job) => (\n//                     <Grid item xs={12} sm={6} md={4} key={job._id}>\n//                         <Card sx={{ height: '100%' }}>\n//                             <CardContent>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     {job.title}\n//                                 </Typography>\n//                                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                                     {job.description}\n//                                 </Typography>\n//                                 <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>\n//                                     Location: {job.location}\n//                                 </Typography>\n//                                 <Typography variant=\"subtitle2\">\n//                                     Hourly Rate: ${job.hourlyRate}\n//                                 </Typography>\n//                                 <Button\n//                                     variant=\"contained\"\n//                                     color=\"primary\"\n//                                     fullWidth\n//                                     sx={{ mt: 2 }}\n//                                 >\n//                                     Apply Now\n//                                 </Button>\n//                             </CardContent>\n//                         </Card>\n//                     </Grid>\n//                 ))}\n//             </Grid>\n//         </Container>\n//     );\n// };\n\n// export default Dashboard;\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Container, Grid, Card, CardContent, Typography, Button, TextField, Box } from '@mui/material';\n\nconst Dashboard = () => {\n    const [jobs, setJobs] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    useEffect(() => {\n        const fetchJobs = async () => {\n            try {\n                const response = await apiClient.get('/jobs');\n                setJobs(response.data.data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchJobs();\n    }, []);\n\n    const filteredJobs = jobs.filter((job) =>\n        job.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: '#E3F2FD', // Light blue color\n                minHeight: '100vh', // Ensure it covers the entire viewport\n                paddingTop: '80px', // Adjust for the navbar height\n                transition: 'background-color 0.5s ease', // Smooth color transition\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold', color: '#0D47A1' }}>\n                    Explore Opportunities\n                </Typography>\n                <Box sx={{ mb: 3 }}>\n                    <TextField\n                        label=\"Search Jobs\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                    />\n                </Box>\n                <Grid container spacing={4}>\n                    {filteredJobs.map((job) => (\n                        <Grid item xs={12} sm={6} md={4} key={job._id}>\n                            <Card sx={{ height: '100%' }}>\n                                <CardContent>\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {job.title}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\n                                        {job.description}\n                                    </Typography>\n                                    <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>\n                                        Location: {job.location}\n                                    </Typography>\n                                    <Typography variant=\"subtitle2\">\n                                        Hourly Rate: ${job.hourlyRate}\n                                    </Typography>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        sx={{ mt: 2 }}\n                                    >\n                                        Apply Now\n                                    </Button>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </Box>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}