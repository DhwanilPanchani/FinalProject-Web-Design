{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n//     Dialog,\n//     DialogActions,\n//     DialogContent,\n//     DialogTitle,\n//     MenuItem,\n//     Select,\n//     FormControl,\n//     InputLabel,\n//     IconButton,\n// } from '@mui/material';\n// import { Edit, Add, Delete } from '@mui/icons-material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         skills: [],\n//         workHistory: [],\n//         education: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n//     const [dialog, setDialog] = useState({ type: '', open: false, data: {} });\n//     const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//     // Add skill functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     const handleDialogOpen = (type) => {\n//         setDialog({ type, open: true, data: {} });\n//     };\n\n//     const handleDialogClose = () => {\n//         setDialog({ type: '', open: false, data: {} });\n//     };\n\n//     const handleDialogSubmit = () => {\n//         if (dialog.type === 'workHistory') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 workHistory: [...prev.workHistory, dialog.data],\n//             }));\n//         } else if (dialog.type === 'education') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 education: [...prev.education, dialog.data],\n//             }));\n//         }\n//         handleDialogClose();\n//     };\n\n//     const handleDialogChange = (field, value) => {\n//         setDialog((prev) => ({\n//             ...prev,\n//             data: { ...prev.data, [field]: value },\n//         }));\n//     };\n\n//     const handleEditDialogOpen = () => {\n//         setEditDialogOpen(true);\n//     };\n\n//     const handleEditDialogClose = () => {\n//         setEditDialogOpen(false);\n//     };\n\n//     const handleEditDialogSubmit = () => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             name: dialog.data.name || prev.name,\n//             location: dialog.data.location || prev.location,\n//             hourlyRate: dialog.data.hourlyRate || prev.hourlyRate,\n//         }));\n//         handleEditDialogClose();\n//     };\n\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh', // Full viewport height\n//                 paddingTop: '80px', // Adjust for navbar height\n//             }}\n//         >\n//             <Container maxWidth=\"md\">\n//                 <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                     <Typography\n//                         variant=\"h5\"\n//                         sx={{\n//                             fontWeight: 'bold',\n//                             color: '#0D47A1', // Dark blue color\n//                         }}\n//                     >\n//                         Preview Profile\n//                     </Typography>\n//                     <Typography variant=\"body2\" sx={{ mb: 2 }}>\n//                         Make any edits you want, then submit your profile. You can make more changes after itâ€™s live.\n//                     </Typography>\n//                     <Button variant=\"contained\" color=\"success\">\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Profile Information Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mr: 3 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Box>\n//                                 <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n//                                 <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n//                                 <Typography variant=\"body2\">\n//                                     {profile.hourlyRate ? `$${profile.hourlyRate}.00 Hourly rate` : 'Set your hourly rate'}\n//                                 </Typography>\n//                             </Box>\n//                             <IconButton color=\"primary\" onClick={handleEditDialogOpen}>\n//                                 <Edit />\n//                             </IconButton>\n//                         </Box>\n//                         <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                             {profile.bio || 'Write a brief description about yourself...'}\n//                         </Typography>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Profile Photo</Typography>\n//                             <input type=\"file\" accept=\"image/*\" onChange={(e) => handleFileChange(e, 'profilePhoto')} />\n//                         </Box>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Resume (PDF)</Typography>\n//                             <input type=\"file\" accept=\"application/pdf\" onChange={(e) => handleFileChange(e, 'resume')} />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Skills Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                         />\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Work History Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Work History\n//                         </Typography>\n//                         {profile.workHistory.map((work, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {work.company} | {work.position}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{work.duration}</Typography>\n//                                     <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                         {work.description}\n//                                     </Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     workHistory: prev.workHistory.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('workHistory')}\n//                         >\n//                             Add Work Experience\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Education Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Education\n//                         </Typography>\n//                         {profile.education.map((edu, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {edu.school}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{edu.degree}</Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     education: prev.education.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('education')}\n//                         >\n//                             Add Education\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Dialog for Adding Work History or Education */}\n//                 <Dialog open={dialog.open} onClose={handleDialogClose}>\n//                     <DialogTitle>\n//                         {dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'}\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         {dialog.type === 'workHistory' ? (\n//                             <>\n//                                 <TextField\n//                                     label=\"Company\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('company', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Position\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('position', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Duration\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('duration', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Description\"\n//                                     fullWidth\n//                                     multiline\n//                                     rows={3}\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('description', e.target.value)}\n//                                 />\n//                             </>\n//                         ) : (\n//                             <>\n//                                 <TextField\n//                                     label=\"School\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('school', e.target.value)}\n//                                 />\n//                                 <FormControl fullWidth margin=\"normal\">\n//                                     <InputLabel>Degree</InputLabel>\n//                                     <Select\n//                                         value={dialog.data.degree || ''}\n//                                         onChange={(e) => handleDialogChange('degree', e.target.value)}\n//                                     >\n//                                         <MenuItem value=\"High School\">High School</MenuItem>\n//                                         <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n//                                         <MenuItem value=\"Masters\">Masters</MenuItem>\n//                                         <MenuItem value=\"PhD\">PhD</MenuItem>\n//                                         <MenuItem value=\"Certification Course\">Certification Course</MenuItem>\n//                                     </Select>\n//                                 </FormControl>\n//                             </>\n//                         )}\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={handleDialogClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <Button onClick={handleDialogSubmit} color=\"primary\">\n//                             Add\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n\n//                 {/* Snackbar for Feedback */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity}>{alert.message}</Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;\n\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Avatar, Button, TextField, Chip, Card, CardContent, Snackbar, Alert, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\nimport { Edit, Add, Delete } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: '',\n    location: '',\n    hourlyRate: '',\n    bio: '',\n    skills: [],\n    workHistory: [],\n    education: [],\n    profilePhoto: null,\n    resume: null\n  });\n  const [skillInput, setSkillInput] = useState('');\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [dialog, setDialog] = useState({\n    open: false,\n    type: '',\n    data: {}\n  });\n\n  // Add Skill Functionality\n  const handleSkillAdd = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      if (!profile.skills.includes(skillInput.trim())) {\n        setProfile(prev => ({\n          ...prev,\n          skills: [...prev.skills, skillInput.trim()]\n        }));\n        setSkillInput('');\n      } else {\n        setAlert({\n          open: true,\n          message: 'Skill already added.',\n          severity: 'warning'\n        });\n      }\n    }\n  };\n  const handleSkillRemove = skill => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.filter(s => s !== skill)\n    }));\n  };\n  const handleDialogOpen = type => {\n    setDialog({\n      open: true,\n      type,\n      data: {}\n    });\n  };\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      type: '',\n      data: {}\n    });\n  };\n  const handleDialogSubmit = () => {\n    if (dialog.type === 'workHistory') {\n      setProfile(prev => ({\n        ...prev,\n        workHistory: [...prev.workHistory, dialog.data]\n      }));\n    } else if (dialog.type === 'education') {\n      setProfile(prev => ({\n        ...prev,\n        education: [...prev.education, dialog.data]\n      }));\n    }\n    handleDialogClose();\n  };\n  const handleDialogChange = (field, value) => {\n    setDialog(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        [field]: value\n      }\n    }));\n  };\n  const handleFileChange = (e, type) => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfile(prev => ({\n        ...prev,\n        [type]: file\n      }));\n    }\n  };\n  const validateFields = () => {\n    if (!profile.name || !profile.location || !profile.hourlyRate || !profile.bio || profile.skills.length === 0 || profile.workHistory.length === 0 || profile.education.length === 0 || !profile.profilePhoto || !profile.resume) {\n      setAlert({\n        open: true,\n        message: 'Please complete all required fields.',\n        severity: 'error'\n      });\n      return false;\n    }\n    return true;\n  };\n  const handleSubmitProfile = async () => {\n    if (!validateFields()) return;\n    const formData = new FormData();\n    formData.append('name', profile.name);\n    formData.append('location', profile.location);\n    formData.append('hourlyRate', profile.hourlyRate);\n    formData.append('bio', profile.bio);\n    formData.append('skills', JSON.stringify(profile.skills));\n    formData.append('workHistory', JSON.stringify(profile.workHistory));\n    formData.append('education', JSON.stringify(profile.education));\n    formData.append('profilePhoto', profile.profilePhoto);\n    formData.append('resume', profile.resume);\n    try {\n      const response = await fetch('/api/freelancers', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        setAlert({\n          open: true,\n          message: 'Profile submitted successfully!',\n          severity: 'success'\n        });\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: 'Error submitting profile.',\n        severity: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#E3F2FD',\n      minHeight: '100vh',\n      paddingTop: '80px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        sx: {\n          fontWeight: 'bold',\n          color: '#0D47A1',\n          mb: 3\n        },\n        children: \"Preview Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4,\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 100,\n                height: 100,\n                mr: 3\n              },\n              src: profile.profilePhoto ? URL.createObjectURL(profile.profilePhoto) : 'https://via.placeholder.com/100'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: profile.name || 'Your Name'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: profile.location || 'Your Location'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: profile.hourlyRate ? `$${profile.hourlyRate}/hr` : 'Set your hourly rate'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bio\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: profile.bio,\n            onChange: e => setProfile({\n              ...profile,\n              bio: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Upload Profile Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => handleFileChange(e, 'profilePhoto'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Upload Resume (PDF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: e => handleFileChange(e, 'resume'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4,\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1,\n              mb: 2\n            },\n            children: profile.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: skill,\n              onDelete: () => handleSkillRemove(skill),\n              color: \"primary\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add a skill\",\n            fullWidth: true,\n            value: skillInput,\n            onChange: e => setSkillInput(e.target.value),\n            onKeyPress: handleSkillAdd,\n            helperText: \"Press Enter to add a skill.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4,\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"Work History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this), profile.workHistory.map((work, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: work.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: work.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: work.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: () => setProfile(prev => ({\n                ...prev,\n                workHistory: prev.workHistory.filter((_, i) => i !== index)\n              })),\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 40\n            }, this),\n            onClick: () => handleDialogOpen('workHistory'),\n            children: \"Add Work Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4,\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 25\n          }, this), profile.education.map((edu, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: edu.school\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: edu.degree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: () => setProfile(prev => ({\n                ...prev,\n                education: prev.education.filter((_, i) => i !== index)\n              })),\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 40\n            }, this),\n            onClick: () => handleDialogOpen('education'),\n            children: \"Add Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleSubmitProfile,\n          children: \"Submit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: alert.open,\n        autoHideDuration: 4000,\n        onClose: () => setAlert({\n          open: false\n        }),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: alert.severity,\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: dialog.open,\n        onClose: handleDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: dialog.type === 'workHistory' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Company\",\n              fullWidth: true,\n              margin: \"normal\",\n              onChange: e => handleDialogChange('company', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Position\",\n              fullWidth: true,\n              margin: \"normal\",\n              onChange: e => handleDialogChange('position', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Duration\",\n              fullWidth: true,\n              margin: \"normal\",\n              onChange: e => handleDialogChange('duration', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"School\",\n              fullWidth: true,\n              margin: \"normal\",\n              onChange: e => handleDialogChange('school', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Degree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: dialog.data.degree || '',\n                onChange: e => handleDialogChange('degree', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"High School\",\n                  children: \"High School\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Bachelors\",\n                  children: \"Bachelors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Masters\",\n                  children: \"Masters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"PhD\",\n                  children: \"PhD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Certification\",\n                  children: \"Certification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDialogClose,\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDialogSubmit,\n            color: \"primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"b9+1MfkK0BS48UFkj9kaB4NOj/E=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Avatar","Button","TextField","Chip","Card","CardContent","Snackbar","Alert","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","MenuItem","Select","FormControl","InputLabel","Edit","Add","Delete","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","profile","setProfile","name","location","hourlyRate","bio","skills","workHistory","education","profilePhoto","resume","skillInput","setSkillInput","alert","setAlert","open","message","severity","dialog","setDialog","type","data","handleSkillAdd","e","key","trim","preventDefault","includes","prev","handleSkillRemove","skill","filter","s","handleDialogOpen","handleDialogClose","handleDialogSubmit","handleDialogChange","field","value","handleFileChange","file","target","files","validateFields","length","handleSubmitProfile","formData","FormData","append","JSON","stringify","response","fetch","method","body","result","json","success","Error","error","sx","backgroundColor","minHeight","paddingTop","children","maxWidth","variant","align","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","display","alignItems","width","height","mr","src","URL","createObjectURL","label","fullWidth","multiline","rows","onChange","mt","accept","required","flexWrap","gap","map","index","onDelete","onKeyPress","helperText","work","justifyContent","company","position","duration","onClick","_","i","startIcon","edu","school","degree","textAlign","autoHideDuration","onClose","margin","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n//     Dialog,\n//     DialogActions,\n//     DialogContent,\n//     DialogTitle,\n//     MenuItem,\n//     Select,\n//     FormControl,\n//     InputLabel,\n//     IconButton,\n// } from '@mui/material';\n// import { Edit, Add, Delete } from '@mui/icons-material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         skills: [],\n//         workHistory: [],\n//         education: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n//     const [dialog, setDialog] = useState({ type: '', open: false, data: {} });\n//     const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//     // Add skill functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     const handleDialogOpen = (type) => {\n//         setDialog({ type, open: true, data: {} });\n//     };\n\n//     const handleDialogClose = () => {\n//         setDialog({ type: '', open: false, data: {} });\n//     };\n\n//     const handleDialogSubmit = () => {\n//         if (dialog.type === 'workHistory') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 workHistory: [...prev.workHistory, dialog.data],\n//             }));\n//         } else if (dialog.type === 'education') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 education: [...prev.education, dialog.data],\n//             }));\n//         }\n//         handleDialogClose();\n//     };\n\n//     const handleDialogChange = (field, value) => {\n//         setDialog((prev) => ({\n//             ...prev,\n//             data: { ...prev.data, [field]: value },\n//         }));\n//     };\n\n//     const handleEditDialogOpen = () => {\n//         setEditDialogOpen(true);\n//     };\n\n//     const handleEditDialogClose = () => {\n//         setEditDialogOpen(false);\n//     };\n\n//     const handleEditDialogSubmit = () => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             name: dialog.data.name || prev.name,\n//             location: dialog.data.location || prev.location,\n//             hourlyRate: dialog.data.hourlyRate || prev.hourlyRate,\n//         }));\n//         handleEditDialogClose();\n//     };\n\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh', // Full viewport height\n//                 paddingTop: '80px', // Adjust for navbar height\n//             }}\n//         >\n//             <Container maxWidth=\"md\">\n//                 <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                     <Typography\n//                         variant=\"h5\"\n//                         sx={{\n//                             fontWeight: 'bold',\n//                             color: '#0D47A1', // Dark blue color\n//                         }}\n//                     >\n//                         Preview Profile\n//                     </Typography>\n//                     <Typography variant=\"body2\" sx={{ mb: 2 }}>\n//                         Make any edits you want, then submit your profile. You can make more changes after itâ€™s live.\n//                     </Typography>\n//                     <Button variant=\"contained\" color=\"success\">\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Profile Information Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mr: 3 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Box>\n//                                 <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n//                                 <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n//                                 <Typography variant=\"body2\">\n//                                     {profile.hourlyRate ? `$${profile.hourlyRate}.00 Hourly rate` : 'Set your hourly rate'}\n//                                 </Typography>\n//                             </Box>\n//                             <IconButton color=\"primary\" onClick={handleEditDialogOpen}>\n//                                 <Edit />\n//                             </IconButton>\n//                         </Box>\n//                         <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                             {profile.bio || 'Write a brief description about yourself...'}\n//                         </Typography>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Profile Photo</Typography>\n//                             <input type=\"file\" accept=\"image/*\" onChange={(e) => handleFileChange(e, 'profilePhoto')} />\n//                         </Box>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Resume (PDF)</Typography>\n//                             <input type=\"file\" accept=\"application/pdf\" onChange={(e) => handleFileChange(e, 'resume')} />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Skills Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                         />\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Work History Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Work History\n//                         </Typography>\n//                         {profile.workHistory.map((work, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {work.company} | {work.position}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{work.duration}</Typography>\n//                                     <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                         {work.description}\n//                                     </Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     workHistory: prev.workHistory.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('workHistory')}\n//                         >\n//                             Add Work Experience\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Education Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Education\n//                         </Typography>\n//                         {profile.education.map((edu, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {edu.school}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{edu.degree}</Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     education: prev.education.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('education')}\n//                         >\n//                             Add Education\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Dialog for Adding Work History or Education */}\n//                 <Dialog open={dialog.open} onClose={handleDialogClose}>\n//                     <DialogTitle>\n//                         {dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'}\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         {dialog.type === 'workHistory' ? (\n//                             <>\n//                                 <TextField\n//                                     label=\"Company\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('company', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Position\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('position', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Duration\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('duration', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Description\"\n//                                     fullWidth\n//                                     multiline\n//                                     rows={3}\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('description', e.target.value)}\n//                                 />\n//                             </>\n//                         ) : (\n//                             <>\n//                                 <TextField\n//                                     label=\"School\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('school', e.target.value)}\n//                                 />\n//                                 <FormControl fullWidth margin=\"normal\">\n//                                     <InputLabel>Degree</InputLabel>\n//                                     <Select\n//                                         value={dialog.data.degree || ''}\n//                                         onChange={(e) => handleDialogChange('degree', e.target.value)}\n//                                     >\n//                                         <MenuItem value=\"High School\">High School</MenuItem>\n//                                         <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n//                                         <MenuItem value=\"Masters\">Masters</MenuItem>\n//                                         <MenuItem value=\"PhD\">PhD</MenuItem>\n//                                         <MenuItem value=\"Certification Course\">Certification Course</MenuItem>\n//                                     </Select>\n//                                 </FormControl>\n//                             </>\n//                         )}\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={handleDialogClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <Button onClick={handleDialogSubmit} color=\"primary\">\n//                             Add\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n\n//                 {/* Snackbar for Feedback */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity}>{alert.message}</Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport {\n    Container,\n    Typography,\n    Box,\n    Avatar,\n    Button,\n    TextField,\n    Chip,\n    Card,\n    CardContent,\n    Snackbar,\n    Alert,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    MenuItem,\n    Select,\n    FormControl,\n    InputLabel,\n} from '@mui/material';\nimport { Edit, Add, Delete } from '@mui/icons-material';\n\nconst ProfilePage = () => {\n    const [profile, setProfile] = useState({\n        name: '',\n        location: '',\n        hourlyRate: '',\n        bio: '',\n        skills: [],\n        workHistory: [],\n        education: [],\n        profilePhoto: null,\n        resume: null,\n    });\n\n    const [skillInput, setSkillInput] = useState('');\n    const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n    const [dialog, setDialog] = useState({ open: false, type: '', data: {} });\n\n    // Add Skill Functionality\n    const handleSkillAdd = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            e.preventDefault();\n            if (!profile.skills.includes(skillInput.trim())) {\n                setProfile((prev) => ({\n                    ...prev,\n                    skills: [...prev.skills, skillInput.trim()],\n                }));\n                setSkillInput('');\n            } else {\n                setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n            }\n        }\n    };\n\n    const handleSkillRemove = (skill) => {\n        setProfile((prev) => ({\n            ...prev,\n            skills: prev.skills.filter((s) => s !== skill),\n        }));\n    };\n\n    const handleDialogOpen = (type) => {\n        setDialog({ open: true, type, data: {} });\n    };\n\n    const handleDialogClose = () => {\n        setDialog({ open: false, type: '', data: {} });\n    };\n\n    const handleDialogSubmit = () => {\n        if (dialog.type === 'workHistory') {\n            setProfile((prev) => ({\n                ...prev,\n                workHistory: [...prev.workHistory, dialog.data],\n            }));\n        } else if (dialog.type === 'education') {\n            setProfile((prev) => ({\n                ...prev,\n                education: [...prev.education, dialog.data],\n            }));\n        }\n        handleDialogClose();\n    };\n\n    const handleDialogChange = (field, value) => {\n        setDialog((prev) => ({\n            ...prev,\n            data: { ...prev.data, [field]: value },\n        }));\n    };\n\n    const handleFileChange = (e, type) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfile((prev) => ({ ...prev, [type]: file }));\n        }\n    };\n\n    const validateFields = () => {\n        if (\n            !profile.name ||\n            !profile.location ||\n            !profile.hourlyRate ||\n            !profile.bio ||\n            profile.skills.length === 0 ||\n            profile.workHistory.length === 0 ||\n            profile.education.length === 0 ||\n            !profile.profilePhoto ||\n            !profile.resume\n        ) {\n            setAlert({\n                open: true,\n                message: 'Please complete all required fields.',\n                severity: 'error',\n            });\n            return false;\n        }\n        return true;\n    };\n\n    const handleSubmitProfile = async () => {\n        if (!validateFields()) return;\n\n        const formData = new FormData();\n        formData.append('name', profile.name);\n        formData.append('location', profile.location);\n        formData.append('hourlyRate', profile.hourlyRate);\n        formData.append('bio', profile.bio);\n        formData.append('skills', JSON.stringify(profile.skills));\n        formData.append('workHistory', JSON.stringify(profile.workHistory));\n        formData.append('education', JSON.stringify(profile.education));\n        formData.append('profilePhoto', profile.profilePhoto);\n        formData.append('resume', profile.resume);\n\n        try {\n            const response = await fetch('/api/freelancers', {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                setAlert({ open: true, message: 'Profile submitted successfully!', severity: 'success' });\n            } else {\n                throw new Error(result.message);\n            }\n        } catch (error) {\n            setAlert({ open: true, message: 'Error submitting profile.', severity: 'error' });\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: '#E3F2FD',\n                minHeight: '100vh',\n                paddingTop: '80px',\n            }}\n        >\n            <Container maxWidth=\"md\">\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    sx={{ fontWeight: 'bold', color: '#0D47A1', mb: 3 }}\n                >\n                    Preview Profile\n                </Typography>\n\n                {/* Profile Information Section */}\n                <Card sx={{ mb: 4, p: 3 }}>\n                    <CardContent>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                            <Avatar\n                                sx={{ width: 100, height: 100, mr: 3 }}\n                                src={\n                                    profile.profilePhoto\n                                        ? URL.createObjectURL(profile.profilePhoto)\n                                        : 'https://via.placeholder.com/100'\n                                }\n                            />\n                            <Box>\n                                <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n                                <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n                                <Typography variant=\"body2\">\n                                    {profile.hourlyRate ? `$${profile.hourlyRate}/hr` : 'Set your hourly rate'}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <TextField\n                            label=\"Bio\"\n                            fullWidth\n                            multiline\n                            rows={4}\n                            value={profile.bio}\n                            onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                        />\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"h6\">Upload Profile Photo</Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) => handleFileChange(e, 'profilePhoto')}\n                                required\n                            />\n                        </Box>\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"h6\">Upload Resume (PDF)</Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"application/pdf\"\n                                onChange={(e) => handleFileChange(e, 'resume')}\n                                required\n                            />\n                        </Box>\n                    </CardContent>\n                </Card>\n\n                {/* Skills Section */}\n                <Card sx={{ mb: 4, p: 3 }}>\n                    <CardContent>\n                        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                            Skills\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                            {profile.skills.map((skill, index) => (\n                                <Chip\n                                    key={index}\n                                    label={skill}\n                                    onDelete={() => handleSkillRemove(skill)}\n                                    color=\"primary\"\n                                />\n                            ))}\n                        </Box>\n                        <TextField\n                            label=\"Add a skill\"\n                            fullWidth\n                            value={skillInput}\n                            onChange={(e) => setSkillInput(e.target.value)}\n                            onKeyPress={handleSkillAdd}\n                            helperText=\"Press Enter to add a skill.\"\n                        />\n                    </CardContent>\n                </Card>\n\n                {/* Work History Section */}\n                <Card sx={{ mb: 4, p: 3 }}>\n                    <CardContent>\n                        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                            Work History\n                        </Typography>\n                        {profile.workHistory.map((work, index) => (\n                            <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n                                <Box>\n                                    <Typography variant=\"subtitle1\">{work.company}</Typography>\n                                    <Typography variant=\"body2\">{work.position}</Typography>\n                                    <Typography variant=\"body2\">{work.duration}</Typography>\n                                </Box>\n                                <IconButton\n                                    color=\"error\"\n                                    onClick={() =>\n                                        setProfile((prev) => ({\n                                            ...prev,\n                                            workHistory: prev.workHistory.filter((_, i) => i !== index),\n                                        }))\n                                    }\n                                >\n                                    <Delete />\n                                </IconButton>\n                            </Box>\n                        ))}\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<Add />}\n                            onClick={() => handleDialogOpen('workHistory')}\n                        >\n                            Add Work Experience\n                        </Button>\n                    </CardContent>\n                </Card>\n\n                {/* Education Section */}\n                <Card sx={{ mb: 4, p: 3 }}>\n                    <CardContent>\n                        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                            Education\n                        </Typography>\n                        {profile.education.map((edu, index) => (\n                            <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n                                <Box>\n                                    <Typography variant=\"subtitle1\">{edu.school}</Typography>\n                                    <Typography variant=\"body2\">{edu.degree}</Typography>\n                                </Box>\n                                <IconButton\n                                    color=\"error\"\n                                    onClick={() =>\n                                        setProfile((prev) => ({\n                                            ...prev,\n                                            education: prev.education.filter((_, i) => i !== index),\n                                        }))\n                                    }\n                                >\n                                    <Delete />\n                                </IconButton>\n                            </Box>\n                        ))}\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<Add />}\n                            onClick={() => handleDialogOpen('education')}\n                        >\n                            Add Education\n                        </Button>\n                    </CardContent>\n                </Card>\n\n                <Box sx={{ textAlign: 'center', mt: 4 }}>\n                    <Button variant=\"contained\" color=\"success\" onClick={handleSubmitProfile}>\n                        Submit Profile\n                    </Button>\n                </Box>\n\n                {/* Snackbar for Alerts */}\n                <Snackbar\n                    open={alert.open}\n                    autoHideDuration={4000}\n                    onClose={() => setAlert({ open: false })}\n                >\n                    <Alert severity={alert.severity}>{alert.message}</Alert>\n                </Snackbar>\n\n                {/* Dialog */}\n                <Dialog open={dialog.open} onClose={handleDialogClose}>\n                    <DialogTitle>\n                        {dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'}\n                    </DialogTitle>\n                    <DialogContent>\n                        {dialog.type === 'workHistory' ? (\n                            <>\n                                <TextField\n                                    label=\"Company\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    onChange={(e) => handleDialogChange('company', e.target.value)}\n                                />\n                                <TextField\n                                    label=\"Position\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    onChange={(e) => handleDialogChange('position', e.target.value)}\n                                />\n                                <TextField\n                                    label=\"Duration\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    onChange={(e) => handleDialogChange('duration', e.target.value)}\n                                />\n                            </>\n                        ) : (\n                            <>\n                                <TextField\n                                    label=\"School\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    onChange={(e) => handleDialogChange('school', e.target.value)}\n                                />\n                                <FormControl fullWidth margin=\"normal\">\n                                    <InputLabel>Degree</InputLabel>\n                                    <Select\n                                        value={dialog.data.degree || ''}\n                                        onChange={(e) => handleDialogChange('degree', e.target.value)}\n                                    >\n                                        <MenuItem value=\"High School\">High School</MenuItem>\n                                        <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n                                        <MenuItem value=\"Masters\">Masters</MenuItem>\n                                        <MenuItem value=\"PhD\">PhD</MenuItem>\n                                        <MenuItem value=\"Certification\">Certification</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleDialogClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleDialogSubmit} color=\"primary\">\n                            Add\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Container>\n        </Box>\n    );\n};\n\nexport default ProfilePage;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}