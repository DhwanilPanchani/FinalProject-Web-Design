{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import {\n//     Container,\n//     TextField,\n//     Button,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Snackbar,\n//     Alert,\n//     Chip,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     MenuItem,\n//     Card,\n//     CardContent,\n// } from '@mui/material';\n\n// const Profile = () => {\n//     const [profile, setProfile] = useState({\n//         bio: '',\n//         skills: [],\n//         experience: '',\n//         resume: null,\n//         profilePhoto: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const response = await apiClient.get('/freelancers/profile', {\n//                     headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//                 });\n//                 setProfile(response.data.data);\n//                 if (response.data.data.profilePhoto) {\n//                     setProfilePhotoPreview(response.data.data.profilePhoto);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleFileChange = (e) => {\n//         const { name, files } = e.target;\n//         setProfile({ ...profile, [name]: files[0] });\n\n//         if (name === 'profilePhoto') {\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 setProfilePhotoPreview(reader.result);\n//             };\n//             reader.readAsDataURL(files[0]);\n//         }\n//     };\n\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Skill already added.',\n//                     severity: 'warning',\n//                 });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skillToRemove) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((skill) => skill !== skillToRemove),\n//         }));\n//     };\n\n//     const validateProfile = () => {\n//         if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n//             setAlert({\n//                 open: true,\n//                 message: 'All fields are required.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (!profile.resume || profile.resume.type !== 'application/pdf') {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid resume in PDF format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (\n//             !profile.profilePhoto ||\n//             !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid profile photo in JPG or PNG format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateProfile()) return;\n\n//         const formData = new FormData();\n//         formData.append('bio', profile.bio);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('experience', profile.experience);\n//         formData.append('resume', profile.resume);\n//         formData.append('profilePhoto', profile.profilePhoto);\n\n//         try {\n//             await apiClient.put('/freelancers/profile', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                     Authorization: `Bearer ${localStorage.getItem('token')}`,\n//                 },\n//             });\n//             setAlert({\n//                 open: true,\n//                 message: 'Profile updated successfully!',\n//                 severity: 'success',\n//             });\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error saving profile. Please try again.',\n//                 severity: 'error',\n//             });\n//             console.error(error);\n//         }\n//     };\n\n//     const handleAlertClose = () => {\n//         setAlert({ ...alert, open: false });\n//     };\n\n//     return (\n//         <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n//             <Card\n//                 sx={{\n//                     boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n//                     borderRadius: '16px',\n//                     overflow: 'hidden',\n//                     animation: 'fadeIn 0.5s ease-in-out',\n//                 }}\n//             >\n//                 <CardContent sx={{ p: 4, background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)' }}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         Profile\n//                     </Typography>\n//                     <Box align=\"center\" sx={{ mb: 3 }}>\n//                         <Avatar\n//                             alt=\"Profile Photo\"\n//                             src={profilePhotoPreview}\n//                             sx={{\n//                                 width: 100,\n//                                 height: 100,\n//                                 mb: 2,\n//                                 border: '3px solid #1976d2',\n//                             }}\n//                         />\n//                         <input\n//                             accept=\"image/*\"\n//                             type=\"file\"\n//                             name=\"profilePhoto\"\n//                             onChange={handleFileChange}\n//                         />\n//                     </Box>\n//                     <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             margin=\"normal\"\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <TextField\n//                                 label=\"Add Skills\"\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 value={skillInput}\n//                                 onChange={(e) => setSkillInput(e.target.value)}\n//                                 onKeyPress={handleSkillAdd}\n//                                 helperText=\"Press Enter to add a skill.\"\n//                             />\n//                             <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n//                                 {profile.skills.map((skill, index) => (\n//                                     <Chip\n//                                         key={index}\n//                                         label={skill}\n//                                         onDelete={() => handleSkillRemove(skill)}\n//                                         color=\"primary\"\n//                                     />\n//                                 ))}\n//                             </Box>\n//                         </Box>\n//                         <FormControl fullWidth sx={{ mt: 2 }}>\n//                             <InputLabel id=\"experience-label\">Experience</InputLabel>\n//                             <Select\n//                                 labelId=\"experience-label\"\n//                                 id=\"experience\"\n//                                 value={profile.experience}\n//                                 onChange={(e) =>\n//                                     setProfile({ ...profile, experience: e.target.value })\n//                                 }\n//                                 label=\"Experience\"\n//                             >\n//                                 <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n//                                 <MenuItem value=\"2-4 years\">2-4 years</MenuItem>\n//                                 <MenuItem value=\"4+ years\">4+ years</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"body1\" gutterBottom>\n//                                 Upload Resume (PDF only)\n//                             </Typography>\n//                             <input\n//                                 accept=\".pdf\"\n//                                 type=\"file\"\n//                                 name=\"resume\"\n//                                 onChange={handleFileChange}\n//                             />\n//                         </Box>\n//                         <Button\n//                             type=\"submit\"\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             fullWidth\n//                             sx={{ mt: 3 }}\n//                         >\n//                             Save Profile\n//                         </Button>\n//                     </Box>\n//                 </CardContent>\n//             </Card>\n//             <Snackbar\n//                 open={alert.open}\n//                 autoHideDuration={4000}\n//                 onClose={handleAlertClose}\n//                 anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//             >\n//                 <Alert\n//                     onClose={handleAlertClose}\n//                     severity={alert.severity}\n//                     sx={{ width: '100%' }}\n//                 >\n//                     {alert.message}\n//                 </Alert>\n//             </Snackbar>\n//         </Container>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Avatar, Button, TextField, Chip, Card, CardContent, Divider, Snackbar, Alert, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Select, FormControl, InputLabel, IconButton } from '@mui/material';\nimport { Edit, Add, Delete } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: '',\n    location: '',\n    hourlyRate: '',\n    bio: '',\n    skills: [],\n    workHistory: [],\n    education: [],\n    profilePhoto: null\n  });\n  const [skillInput, setSkillInput] = useState('');\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [dialog, setDialog] = useState({\n    type: '',\n    open: false,\n    data: {}\n  });\n  const [editDialogOpen, setEditDialogOpen] = useState(false); // For editing name, location, hourly rate\n  const [editDialogData, setEditDialogData] = useState({\n    name: '',\n    location: '',\n    hourlyRate: ''\n  }); // To manage edit dialog data\n\n  // Add skill functionality\n  const handleSkillAdd = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      if (!profile.skills.includes(skillInput.trim())) {\n        setProfile(prev => ({\n          ...prev,\n          skills: [...prev.skills, skillInput.trim()]\n        }));\n        setSkillInput('');\n      } else {\n        setAlert({\n          open: true,\n          message: 'Skill already added.',\n          severity: 'warning'\n        });\n      }\n    }\n  };\n\n  // Remove skill\n  const handleSkillRemove = skill => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.filter(s => s !== skill)\n    }));\n  };\n\n  // Handle Add Education/Work Experience Dialogs\n  const handleDialogOpen = type => {\n    setDialog({\n      type,\n      open: true,\n      data: {}\n    });\n  };\n  const handleDialogClose = () => {\n    setDialog({\n      type: '',\n      open: false,\n      data: {}\n    });\n  };\n  const handleDialogSubmit = () => {\n    if (dialog.type === 'workHistory') {\n      setProfile(prev => ({\n        ...prev,\n        workHistory: [...prev.workHistory, dialog.data]\n      }));\n    } else if (dialog.type === 'education') {\n      setProfile(prev => ({\n        ...prev,\n        education: [...prev.education, dialog.data]\n      }));\n    }\n    handleDialogClose();\n  };\n  const handleDialogChange = (field, value) => {\n    setDialog(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        [field]: value\n      }\n    }));\n  };\n\n  // Open Edit Dialog\n  const handleEditDialogOpen = () => {\n    setEditDialogData({\n      name: profile.name,\n      location: profile.location,\n      hourlyRate: profile.hourlyRate\n    });\n    setEditDialogOpen(true);\n  };\n\n  // Close Edit Dialog\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n  };\n\n  // Submit Edit Dialog\n  const handleEditDialogSubmit = () => {\n    setProfile(prev => ({\n      ...prev,\n      name: editDialogData.name || prev.name,\n      location: editDialogData.location || prev.location,\n      hourlyRate: editDialogData.hourlyRate || prev.hourlyRate\n    }));\n    setEditDialogOpen(false);\n  };\n\n  // Handle File Upload (Profile Photo)\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfile(prev => ({\n        ...prev,\n        profilePhoto: file\n      }));\n    }\n  };\n\n  // Validate Fields\n  const validateFields = () => {\n    if (!profile.name || !profile.location || !profile.hourlyRate || !profile.bio || profile.skills.length === 0 || profile.workHistory.length === 0 || profile.education.length === 0) {\n      setAlert({\n        open: true,\n        message: 'Please complete all fields.',\n        severity: 'warning'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  // Submit Profile to Backend\n  const handleSubmitProfile = async () => {\n    if (!validateFields()) return;\n    const formData = new FormData();\n    formData.append('name', profile.name);\n    formData.append('location', profile.location);\n    formData.append('hourlyRate', profile.hourlyRate);\n    formData.append('bio', profile.bio);\n    formData.append('skills', JSON.stringify(profile.skills));\n    formData.append('workHistory', JSON.stringify(profile.workHistory));\n    formData.append('education', JSON.stringify(profile.education));\n    if (profile.profilePhoto) {\n      formData.append('profilePhoto', profile.profilePhoto);\n    }\n    try {\n      const response = await fetch('/api/freelancers', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        setAlert({\n          open: true,\n          message: 'Profile submitted successfully!',\n          severity: 'success'\n        });\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: 'Error submitting profile.',\n        severity: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 5,\n      mb: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Preview Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: \"Make any edits you want, then submit your profile. You can make more changes after it\\u2019s live.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: handleSubmitProfile,\n        children: \"Submit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              width: 100,\n              height: 100,\n              mr: 3\n            },\n            src: profile.profilePhoto ? URL.createObjectURL(profile.profilePhoto) : 'https://via.placeholder.com/100'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: profile.name || 'Your Name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: profile.location || 'Your Location'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: profile.hourlyRate ? `$${profile.hourlyRate}/hr` : 'Set your hourly rate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            onClick: handleEditDialogOpen,\n            children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: profile.bio || 'Write a brief description about yourself...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Bio\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: profile.bio,\n          onChange: e => setProfile({\n            ...profile,\n            bio: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Upload Profile Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Profile Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: editDialogData.name,\n          onChange: e => setEditDialogData({\n            ...editDialogData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Location\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: editDialogData.location,\n          onChange: e => setEditDialogData({\n            ...editDialogData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Hourly Rate ($/hr)\",\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"number\",\n          value: editDialogData.hourlyRate,\n          onChange: e => setEditDialogData({\n            ...editDialogData,\n            hourlyRate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditDialogClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditDialogSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 476,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"cdAv63KZkP1zVDNDPDFDe4/PCtw=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Avatar","Button","TextField","Chip","Card","CardContent","Divider","Snackbar","Alert","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Select","FormControl","InputLabel","IconButton","Edit","Add","Delete","jsxDEV","_jsxDEV","ProfilePage","_s","profile","setProfile","name","location","hourlyRate","bio","skills","workHistory","education","profilePhoto","skillInput","setSkillInput","alert","setAlert","open","message","severity","dialog","setDialog","type","data","editDialogOpen","setEditDialogOpen","editDialogData","setEditDialogData","handleSkillAdd","e","key","trim","preventDefault","includes","prev","handleSkillRemove","skill","filter","s","handleDialogOpen","handleDialogClose","handleDialogSubmit","handleDialogChange","field","value","handleEditDialogOpen","handleEditDialogClose","handleEditDialogSubmit","handleFileChange","file","target","files","validateFields","length","handleSubmitProfile","formData","FormData","append","JSON","stringify","response","fetch","method","body","result","json","success","Error","error","maxWidth","sx","mt","mb","children","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","p","display","alignItems","width","height","mr","src","URL","createObjectURL","label","fullWidth","multiline","rows","onChange","accept","onClose","margin","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import {\n//     Container,\n//     TextField,\n//     Button,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Snackbar,\n//     Alert,\n//     Chip,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     MenuItem,\n//     Card,\n//     CardContent,\n// } from '@mui/material';\n\n// const Profile = () => {\n//     const [profile, setProfile] = useState({\n//         bio: '',\n//         skills: [],\n//         experience: '',\n//         resume: null,\n//         profilePhoto: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const response = await apiClient.get('/freelancers/profile', {\n//                     headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//                 });\n//                 setProfile(response.data.data);\n//                 if (response.data.data.profilePhoto) {\n//                     setProfilePhotoPreview(response.data.data.profilePhoto);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleFileChange = (e) => {\n//         const { name, files } = e.target;\n//         setProfile({ ...profile, [name]: files[0] });\n\n//         if (name === 'profilePhoto') {\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 setProfilePhotoPreview(reader.result);\n//             };\n//             reader.readAsDataURL(files[0]);\n//         }\n//     };\n\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Skill already added.',\n//                     severity: 'warning',\n//                 });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skillToRemove) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((skill) => skill !== skillToRemove),\n//         }));\n//     };\n\n//     const validateProfile = () => {\n//         if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n//             setAlert({\n//                 open: true,\n//                 message: 'All fields are required.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (!profile.resume || profile.resume.type !== 'application/pdf') {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid resume in PDF format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (\n//             !profile.profilePhoto ||\n//             !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid profile photo in JPG or PNG format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateProfile()) return;\n\n//         const formData = new FormData();\n//         formData.append('bio', profile.bio);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('experience', profile.experience);\n//         formData.append('resume', profile.resume);\n//         formData.append('profilePhoto', profile.profilePhoto);\n\n//         try {\n//             await apiClient.put('/freelancers/profile', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                     Authorization: `Bearer ${localStorage.getItem('token')}`,\n//                 },\n//             });\n//             setAlert({\n//                 open: true,\n//                 message: 'Profile updated successfully!',\n//                 severity: 'success',\n//             });\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error saving profile. Please try again.',\n//                 severity: 'error',\n//             });\n//             console.error(error);\n//         }\n//     };\n\n//     const handleAlertClose = () => {\n//         setAlert({ ...alert, open: false });\n//     };\n\n//     return (\n//         <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n//             <Card\n//                 sx={{\n//                     boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n//                     borderRadius: '16px',\n//                     overflow: 'hidden',\n//                     animation: 'fadeIn 0.5s ease-in-out',\n//                 }}\n//             >\n//                 <CardContent sx={{ p: 4, background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)' }}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         Profile\n//                     </Typography>\n//                     <Box align=\"center\" sx={{ mb: 3 }}>\n//                         <Avatar\n//                             alt=\"Profile Photo\"\n//                             src={profilePhotoPreview}\n//                             sx={{\n//                                 width: 100,\n//                                 height: 100,\n//                                 mb: 2,\n//                                 border: '3px solid #1976d2',\n//                             }}\n//                         />\n//                         <input\n//                             accept=\"image/*\"\n//                             type=\"file\"\n//                             name=\"profilePhoto\"\n//                             onChange={handleFileChange}\n//                         />\n//                     </Box>\n//                     <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             margin=\"normal\"\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <TextField\n//                                 label=\"Add Skills\"\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 value={skillInput}\n//                                 onChange={(e) => setSkillInput(e.target.value)}\n//                                 onKeyPress={handleSkillAdd}\n//                                 helperText=\"Press Enter to add a skill.\"\n//                             />\n//                             <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n//                                 {profile.skills.map((skill, index) => (\n//                                     <Chip\n//                                         key={index}\n//                                         label={skill}\n//                                         onDelete={() => handleSkillRemove(skill)}\n//                                         color=\"primary\"\n//                                     />\n//                                 ))}\n//                             </Box>\n//                         </Box>\n//                         <FormControl fullWidth sx={{ mt: 2 }}>\n//                             <InputLabel id=\"experience-label\">Experience</InputLabel>\n//                             <Select\n//                                 labelId=\"experience-label\"\n//                                 id=\"experience\"\n//                                 value={profile.experience}\n//                                 onChange={(e) =>\n//                                     setProfile({ ...profile, experience: e.target.value })\n//                                 }\n//                                 label=\"Experience\"\n//                             >\n//                                 <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n//                                 <MenuItem value=\"2-4 years\">2-4 years</MenuItem>\n//                                 <MenuItem value=\"4+ years\">4+ years</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"body1\" gutterBottom>\n//                                 Upload Resume (PDF only)\n//                             </Typography>\n//                             <input\n//                                 accept=\".pdf\"\n//                                 type=\"file\"\n//                                 name=\"resume\"\n//                                 onChange={handleFileChange}\n//                             />\n//                         </Box>\n//                         <Button\n//                             type=\"submit\"\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             fullWidth\n//                             sx={{ mt: 3 }}\n//                         >\n//                             Save Profile\n//                         </Button>\n//                     </Box>\n//                 </CardContent>\n//             </Card>\n//             <Snackbar\n//                 open={alert.open}\n//                 autoHideDuration={4000}\n//                 onClose={handleAlertClose}\n//                 anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//             >\n//                 <Alert\n//                     onClose={handleAlertClose}\n//                     severity={alert.severity}\n//                     sx={{ width: '100%' }}\n//                 >\n//                     {alert.message}\n//                 </Alert>\n//             </Snackbar>\n//         </Container>\n//     );\n// };\n\n// export default Profile;\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport {\n    Container,\n    Typography,\n    Box,\n    Avatar,\n    Button,\n    TextField,\n    Chip,\n    Card,\n    CardContent,\n    Divider,\n    Snackbar,\n    Alert,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    MenuItem,\n    Select,\n    FormControl,\n    InputLabel,\n    IconButton,\n} from '@mui/material';\nimport { Edit, Add, Delete } from '@mui/icons-material';\n\nconst ProfilePage = () => {\n    const [profile, setProfile] = useState({\n        name: '',\n        location: '',\n        hourlyRate: '',\n        bio: '',\n        skills: [],\n        workHistory: [],\n        education: [],\n        profilePhoto: null,\n    });\n\n    const [skillInput, setSkillInput] = useState('');\n    const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n    const [dialog, setDialog] = useState({ type: '', open: false, data: {} });\n    const [editDialogOpen, setEditDialogOpen] = useState(false); // For editing name, location, hourly rate\n    const [editDialogData, setEditDialogData] = useState({ name: '', location: '', hourlyRate: '' }); // To manage edit dialog data\n\n    // Add skill functionality\n    const handleSkillAdd = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            e.preventDefault();\n            if (!profile.skills.includes(skillInput.trim())) {\n                setProfile((prev) => ({\n                    ...prev,\n                    skills: [...prev.skills, skillInput.trim()],\n                }));\n                setSkillInput('');\n            } else {\n                setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n            }\n        }\n    };\n\n    // Remove skill\n    const handleSkillRemove = (skill) => {\n        setProfile((prev) => ({\n            ...prev,\n            skills: prev.skills.filter((s) => s !== skill),\n        }));\n    };\n\n    // Handle Add Education/Work Experience Dialogs\n    const handleDialogOpen = (type) => {\n        setDialog({ type, open: true, data: {} });\n    };\n\n    const handleDialogClose = () => {\n        setDialog({ type: '', open: false, data: {} });\n    };\n\n    const handleDialogSubmit = () => {\n        if (dialog.type === 'workHistory') {\n            setProfile((prev) => ({\n                ...prev,\n                workHistory: [...prev.workHistory, dialog.data],\n            }));\n        } else if (dialog.type === 'education') {\n            setProfile((prev) => ({\n                ...prev,\n                education: [...prev.education, dialog.data],\n            }));\n        }\n        handleDialogClose();\n    };\n\n    const handleDialogChange = (field, value) => {\n        setDialog((prev) => ({\n            ...prev,\n            data: { ...prev.data, [field]: value },\n        }));\n    };\n\n    // Open Edit Dialog\n    const handleEditDialogOpen = () => {\n        setEditDialogData({\n            name: profile.name,\n            location: profile.location,\n            hourlyRate: profile.hourlyRate,\n        });\n        setEditDialogOpen(true);\n    };\n\n    // Close Edit Dialog\n    const handleEditDialogClose = () => {\n        setEditDialogOpen(false);\n    };\n\n    // Submit Edit Dialog\n    const handleEditDialogSubmit = () => {\n        setProfile((prev) => ({\n            ...prev,\n            name: editDialogData.name || prev.name,\n            location: editDialogData.location || prev.location,\n            hourlyRate: editDialogData.hourlyRate || prev.hourlyRate,\n        }));\n        setEditDialogOpen(false);\n    };\n\n    // Handle File Upload (Profile Photo)\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfile((prev) => ({ ...prev, profilePhoto: file }));\n        }\n    };\n\n    // Validate Fields\n    const validateFields = () => {\n        if (\n            !profile.name ||\n            !profile.location ||\n            !profile.hourlyRate ||\n            !profile.bio ||\n            profile.skills.length === 0 ||\n            profile.workHistory.length === 0 ||\n            profile.education.length === 0\n        ) {\n            setAlert({ open: true, message: 'Please complete all fields.', severity: 'warning' });\n            return false;\n        }\n        return true;\n    };\n\n    // Submit Profile to Backend\n    const handleSubmitProfile = async () => {\n        if (!validateFields()) return;\n\n        const formData = new FormData();\n        formData.append('name', profile.name);\n        formData.append('location', profile.location);\n        formData.append('hourlyRate', profile.hourlyRate);\n        formData.append('bio', profile.bio);\n        formData.append('skills', JSON.stringify(profile.skills));\n        formData.append('workHistory', JSON.stringify(profile.workHistory));\n        formData.append('education', JSON.stringify(profile.education));\n\n        if (profile.profilePhoto) {\n            formData.append('profilePhoto', profile.profilePhoto);\n        }\n\n        try {\n            const response = await fetch('/api/freelancers', {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                setAlert({ open: true, message: 'Profile submitted successfully!', severity: 'success' });\n            } else {\n                throw new Error(result.message);\n            }\n        } catch (error) {\n            setAlert({ open: true, message: 'Error submitting profile.', severity: 'error' });\n        }\n    };\n\n    return (\n        <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n            {/* Profile Submission Section */}\n            <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h5\">Preview Profile</Typography>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                    Make any edits you want, then submit your profile. You can make more changes after it’s live.\n                </Typography>\n                <Button variant=\"contained\" color=\"success\" onClick={handleSubmitProfile}>\n                    Submit Profile\n                </Button>\n            </Box>\n\n            {/* Profile Information Section */}\n            <Card sx={{ mb: 4, p: 3 }}>\n                <CardContent>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                        <Avatar\n                            sx={{ width: 100, height: 100, mr: 3 }}\n                            src={profile.profilePhoto ? URL.createObjectURL(profile.profilePhoto) : 'https://via.placeholder.com/100'}\n                        />\n                        <Box>\n                            <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n                            <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n                            <Typography variant=\"body2\">\n                                {profile.hourlyRate ? `$${profile.hourlyRate}/hr` : 'Set your hourly rate'}\n                            </Typography>\n                        </Box>\n                        <IconButton color=\"primary\" onClick={handleEditDialogOpen}>\n                            <Edit />\n                        </IconButton>\n                    </Box>\n                    <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                        {profile.bio || 'Write a brief description about yourself...'}\n                    </Typography>\n                    <TextField\n                        label=\"Bio\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        value={profile.bio}\n                        onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                    />\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"h6\">Upload Profile Photo</Typography>\n                        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n                    </Box>\n                </CardContent>\n            </Card>\n\n            {/* Edit Dialog */}\n            <Dialog open={editDialogOpen} onClose={handleEditDialogClose}>\n                <DialogTitle>Edit Profile Information</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        label=\"Name\"\n                        fullWidth\n                        margin=\"normal\"\n                        value={editDialogData.name}\n                        onChange={(e) => setEditDialogData({ ...editDialogData, name: e.target.value })}\n                    />\n                    <TextField\n                        label=\"Location\"\n                        fullWidth\n                        margin=\"normal\"\n                        value={editDialogData.location}\n                        onChange={(e) => setEditDialogData({ ...editDialogData, location: e.target.value })}\n                    />\n                    <TextField\n                        label=\"Hourly Rate ($/hr)\"\n                        fullWidth\n                        margin=\"normal\"\n                        type=\"number\"\n                        value={editDialogData.hourlyRate}\n                        onChange={(e) => setEditDialogData({ ...editDialogData, hourlyRate: e.target.value })}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleEditDialogClose} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleEditDialogSubmit} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Skills Section */}\n            {/* Work History Section */}\n            {/* Education Section */}\n            {/* Dialog for Adding Work History or Education */}\n            {/* Snackbar for Feedback */}\n        </Container>\n    );\n};\n\nexport default ProfilePage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}