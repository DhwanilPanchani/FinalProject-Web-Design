{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/components/JobList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await apiClient.get('/jobs');\n        setJobs(response.data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/jobs/${job._id}`,\n            className: \"btn btn-primary\",\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, job._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(JobList, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","apiClient","Link","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","fetchJobs","response","get","data","error","console","className","children","map","job","title","fileName","_jsxFileName","lineNumber","columnNumber","description","to","_id","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/components/JobList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Link } from 'react-router-dom';\n\n\nconst JobList = () => {\n    const [jobs, setJobs] = useState([]);\n\n    useEffect(() => {\n        const fetchJobs = async () => {\n            try {\n                const response = await apiClient.get('/jobs');\n                setJobs(response.data.data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchJobs();\n    }, []);\n\n    return (\n        <div className=\"row\">\n            {jobs.map(job => (\n                <div key={job._id} className=\"col-md-4\">\n                    <div className=\"card mb-3\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{job.title}</h5>\n                            <p className=\"card-text\">{job.description}</p>\n                            <Link to={`/jobs/${job._id}`} className=\"btn btn-primary\">View Details</Link>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default JobList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACU,GAAG,CAAC,OAAO,CAAC;QAC7CH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfT,IAAI,CAACU,GAAG,CAACC,GAAG,iBACTd,OAAA;MAAmBW,SAAS,EAAC,UAAU;MAAAC,QAAA,eACnCZ,OAAA;QAAKW,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtBZ,OAAA;UAAKW,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBZ,OAAA;YAAIW,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEE,GAAG,CAACC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3CnB,OAAA;YAAGW,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEE,GAAG,CAACM;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9CnB,OAAA,CAACF,IAAI;YAACuB,EAAE,EAAE,SAASP,GAAG,CAACQ,GAAG,EAAG;YAACX,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GAPAL,GAAG,CAACQ,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CA9BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}