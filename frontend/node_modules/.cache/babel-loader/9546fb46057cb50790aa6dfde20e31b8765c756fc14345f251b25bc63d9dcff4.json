{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import {\n//     Container,\n//     TextField,\n//     Button,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Snackbar,\n//     Alert,\n//     Chip,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     MenuItem,\n//     Card,\n//     CardContent,\n// } from '@mui/material';\n\n// const Profile = () => {\n//     const [profile, setProfile] = useState({\n//         bio: '',\n//         skills: [],\n//         experience: '',\n//         resume: null,\n//         profilePhoto: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const response = await apiClient.get('/freelancers/profile', {\n//                     headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//                 });\n//                 setProfile(response.data.data);\n//                 if (response.data.data.profilePhoto) {\n//                     setProfilePhotoPreview(response.data.data.profilePhoto);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleFileChange = (e) => {\n//         const { name, files } = e.target;\n//         setProfile({ ...profile, [name]: files[0] });\n\n//         if (name === 'profilePhoto') {\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 setProfilePhotoPreview(reader.result);\n//             };\n//             reader.readAsDataURL(files[0]);\n//         }\n//     };\n\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Skill already added.',\n//                     severity: 'warning',\n//                 });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skillToRemove) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((skill) => skill !== skillToRemove),\n//         }));\n//     };\n\n//     const validateProfile = () => {\n//         if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n//             setAlert({\n//                 open: true,\n//                 message: 'All fields are required.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (!profile.resume || profile.resume.type !== 'application/pdf') {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid resume in PDF format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (\n//             !profile.profilePhoto ||\n//             !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid profile photo in JPG or PNG format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateProfile()) return;\n\n//         const formData = new FormData();\n//         formData.append('bio', profile.bio);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('experience', profile.experience);\n//         formData.append('resume', profile.resume);\n//         formData.append('profilePhoto', profile.profilePhoto);\n\n//         try {\n//             await apiClient.put('/freelancers/profile', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                     Authorization: `Bearer ${localStorage.getItem('token')}`,\n//                 },\n//             });\n//             setAlert({\n//                 open: true,\n//                 message: 'Profile updated successfully!',\n//                 severity: 'success',\n//             });\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error saving profile. Please try again.',\n//                 severity: 'error',\n//             });\n//             console.error(error);\n//         }\n//     };\n\n//     const handleAlertClose = () => {\n//         setAlert({ ...alert, open: false });\n//     };\n\n//     return (\n//         <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n//             <Card\n//                 sx={{\n//                     boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n//                     borderRadius: '16px',\n//                     overflow: 'hidden',\n//                     animation: 'fadeIn 0.5s ease-in-out',\n//                 }}\n//             >\n//                 <CardContent sx={{ p: 4, background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)' }}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         Profile\n//                     </Typography>\n//                     <Box align=\"center\" sx={{ mb: 3 }}>\n//                         <Avatar\n//                             alt=\"Profile Photo\"\n//                             src={profilePhotoPreview}\n//                             sx={{\n//                                 width: 100,\n//                                 height: 100,\n//                                 mb: 2,\n//                                 border: '3px solid #1976d2',\n//                             }}\n//                         />\n//                         <input\n//                             accept=\"image/*\"\n//                             type=\"file\"\n//                             name=\"profilePhoto\"\n//                             onChange={handleFileChange}\n//                         />\n//                     </Box>\n//                     <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             margin=\"normal\"\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <TextField\n//                                 label=\"Add Skills\"\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 value={skillInput}\n//                                 onChange={(e) => setSkillInput(e.target.value)}\n//                                 onKeyPress={handleSkillAdd}\n//                                 helperText=\"Press Enter to add a skill.\"\n//                             />\n//                             <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n//                                 {profile.skills.map((skill, index) => (\n//                                     <Chip\n//                                         key={index}\n//                                         label={skill}\n//                                         onDelete={() => handleSkillRemove(skill)}\n//                                         color=\"primary\"\n//                                     />\n//                                 ))}\n//                             </Box>\n//                         </Box>\n//                         <FormControl fullWidth sx={{ mt: 2 }}>\n//                             <InputLabel id=\"experience-label\">Experience</InputLabel>\n//                             <Select\n//                                 labelId=\"experience-label\"\n//                                 id=\"experience\"\n//                                 value={profile.experience}\n//                                 onChange={(e) =>\n//                                     setProfile({ ...profile, experience: e.target.value })\n//                                 }\n//                                 label=\"Experience\"\n//                             >\n//                                 <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n//                                 <MenuItem value=\"2-4 years\">2-4 years</MenuItem>\n//                                 <MenuItem value=\"4+ years\">4+ years</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"body1\" gutterBottom>\n//                                 Upload Resume (PDF only)\n//                             </Typography>\n//                             <input\n//                                 accept=\".pdf\"\n//                                 type=\"file\"\n//                                 name=\"resume\"\n//                                 onChange={handleFileChange}\n//                             />\n//                         </Box>\n//                         <Button\n//                             type=\"submit\"\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             fullWidth\n//                             sx={{ mt: 3 }}\n//                         >\n//                             Save Profile\n//                         </Button>\n//                     </Box>\n//                 </CardContent>\n//             </Card>\n//             <Snackbar\n//                 open={alert.open}\n//                 autoHideDuration={4000}\n//                 onClose={handleAlertClose}\n//                 anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//             >\n//                 <Alert\n//                     onClose={handleAlertClose}\n//                     severity={alert.severity}\n//                     sx={{ width: '100%' }}\n//                 >\n//                     {alert.message}\n//                 </Alert>\n//             </Snackbar>\n//         </Container>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, Avatar, Snackbar, Alert, Chip, FormControl, InputLabel, Select, MenuItem, Card, CardContent } from '@mui/material';\nimport apiClient from '../api/apiClient'; // API Client for making requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    bio: '',\n    skills: [],\n    experience: '',\n    resume: null,\n    profilePhoto: null\n  });\n  const [skillInput, setSkillInput] = useState('');\n  const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  useEffect(() => {\n    // Fetch existing profile if available\n    const fetchProfile = async () => {\n      try {\n        const response = await apiClient.get('/freelancers/profile', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setProfile(response.data.data);\n        if (response.data.data.profilePhoto) {\n          setProfilePhotoPreview(response.data.data.profilePhoto);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchProfile();\n  }, []);\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setProfile({\n      ...profile,\n      [name]: files[0]\n    });\n    if (name === 'profilePhoto') {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setProfilePhotoPreview(reader.result);\n      };\n      reader.readAsDataURL(files[0]);\n    }\n  };\n  const handleSkillAdd = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      if (!profile.skills.includes(skillInput.trim())) {\n        setProfile(prev => ({\n          ...prev,\n          skills: [...prev.skills, skillInput.trim()]\n        }));\n        setSkillInput('');\n      } else {\n        setAlert({\n          open: true,\n          message: 'Skill already added.',\n          severity: 'warning'\n        });\n      }\n    }\n  };\n  const handleSkillRemove = skillToRemove => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.filter(skill => skill !== skillToRemove)\n    }));\n  };\n  const validateProfile = () => {\n    if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n      setAlert({\n        open: true,\n        message: 'All fields are required.',\n        severity: 'error'\n      });\n      return false;\n    }\n    if (!profile.resume || profile.resume.type !== 'application/pdf') {\n      setAlert({\n        open: true,\n        message: 'Please upload a valid resume in PDF format.',\n        severity: 'error'\n      });\n      return false;\n    }\n    if (!profile.profilePhoto || !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)) {\n      setAlert({\n        open: true,\n        message: 'Please upload a valid profile photo in JPG or PNG format.',\n        severity: 'error'\n      });\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateProfile()) return;\n    const formData = new FormData();\n    formData.append('bio', profile.bio);\n    formData.append('skills', JSON.stringify(profile.skills));\n    formData.append('experience', profile.experience);\n    formData.append('resume', profile.resume);\n    formData.append('profilePhoto', profile.profilePhoto);\n    try {\n      const response = await apiClient.post('/freelancers', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 201) {\n        setAlert({\n          open: true,\n          message: 'Profile created successfully!',\n          severity: 'success'\n        });\n      }\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: 'Error saving profile. Please try again.',\n        severity: 'error'\n      });\n      console.error(error);\n    }\n  };\n  const handleAlertClose = () => {\n    setAlert({\n      ...alert,\n      open: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 5,\n      mb: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n        borderRadius: '16px',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          p: 4,\n          background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          align: \"center\",\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Profile Photo\",\n            src: profilePhotoPreview,\n            sx: {\n              width: 100,\n              height: 100,\n              mb: 2,\n              border: '3px solid #1976d2'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            type: \"file\",\n            name: \"profilePhoto\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bio\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            margin: \"normal\",\n            value: profile.bio,\n            onChange: e => setProfile({\n              ...profile,\n              bio: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Add Skills\",\n              fullWidth: true,\n              margin: \"normal\",\n              value: skillInput,\n              onChange: e => setSkillInput(e.target.value),\n              onKeyPress: handleSkillAdd,\n              helperText: \"Press Enter to add a skill.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mt: 1\n              },\n              children: profile.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                label: skill,\n                onDelete: () => handleSkillRemove(skill),\n                color: \"primary\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"experience-label\",\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"experience-label\",\n              id: \"experience\",\n              value: profile.experience,\n              onChange: e => setProfile({\n                ...profile,\n                experience: e.target.value\n              }),\n              label: \"Experience\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"0-1 years\",\n                children: \"0-1 years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"2-4 years\",\n                children: \"2-4 years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"4+ years\",\n                children: \"4+ years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              gutterBottom: true,\n              children: \"Upload Resume (PDF only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \".pdf\",\n              type: \"file\",\n              name: \"resume\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            sx: {\n              mt: 3\n            },\n            children: \"Save Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 4000,\n      onClose: handleAlertClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        severity: alert.severity,\n        sx: {\n          width: '100%'\n        },\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"nq4IV6XxauE2EW0HCjbF18d46ws=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","Typography","Box","Avatar","Snackbar","Alert","Chip","FormControl","InputLabel","Select","MenuItem","Card","CardContent","apiClient","jsxDEV","_jsxDEV","Profile","_s","profile","setProfile","bio","skills","experience","resume","profilePhoto","skillInput","setSkillInput","profilePhotoPreview","setProfilePhotoPreview","alert","setAlert","open","message","severity","fetchProfile","response","get","headers","Authorization","localStorage","getItem","data","error","console","handleFileChange","e","name","files","target","reader","FileReader","onload","result","readAsDataURL","handleSkillAdd","key","trim","preventDefault","includes","prev","handleSkillRemove","skillToRemove","filter","skill","validateProfile","length","type","handleSubmit","formData","FormData","append","JSON","stringify","post","status","handleAlertClose","maxWidth","sx","mt","mb","children","boxShadow","borderRadius","overflow","p","background","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","width","height","border","accept","onChange","component","onSubmit","noValidate","label","fullWidth","multiline","rows","margin","value","onKeyPress","helperText","display","flexWrap","gap","map","index","onDelete","color","id","labelId","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import apiClient from '../api/apiClient';\n// import {\n//     Container,\n//     TextField,\n//     Button,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Snackbar,\n//     Alert,\n//     Chip,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     MenuItem,\n//     Card,\n//     CardContent,\n// } from '@mui/material';\n\n// const Profile = () => {\n//     const [profile, setProfile] = useState({\n//         bio: '',\n//         skills: [],\n//         experience: '',\n//         resume: null,\n//         profilePhoto: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const response = await apiClient.get('/freelancers/profile', {\n//                     headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//                 });\n//                 setProfile(response.data.data);\n//                 if (response.data.data.profilePhoto) {\n//                     setProfilePhotoPreview(response.data.data.profilePhoto);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleFileChange = (e) => {\n//         const { name, files } = e.target;\n//         setProfile({ ...profile, [name]: files[0] });\n\n//         if (name === 'profilePhoto') {\n//             const reader = new FileReader();\n//             reader.onload = () => {\n//                 setProfilePhotoPreview(reader.result);\n//             };\n//             reader.readAsDataURL(files[0]);\n//         }\n//     };\n\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Skill already added.',\n//                     severity: 'warning',\n//                 });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skillToRemove) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((skill) => skill !== skillToRemove),\n//         }));\n//     };\n\n//     const validateProfile = () => {\n//         if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n//             setAlert({\n//                 open: true,\n//                 message: 'All fields are required.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (!profile.resume || profile.resume.type !== 'application/pdf') {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid resume in PDF format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         if (\n//             !profile.profilePhoto ||\n//             !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please upload a valid profile photo in JPG or PNG format.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateProfile()) return;\n\n//         const formData = new FormData();\n//         formData.append('bio', profile.bio);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('experience', profile.experience);\n//         formData.append('resume', profile.resume);\n//         formData.append('profilePhoto', profile.profilePhoto);\n\n//         try {\n//             await apiClient.put('/freelancers/profile', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                     Authorization: `Bearer ${localStorage.getItem('token')}`,\n//                 },\n//             });\n//             setAlert({\n//                 open: true,\n//                 message: 'Profile updated successfully!',\n//                 severity: 'success',\n//             });\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error saving profile. Please try again.',\n//                 severity: 'error',\n//             });\n//             console.error(error);\n//         }\n//     };\n\n//     const handleAlertClose = () => {\n//         setAlert({ ...alert, open: false });\n//     };\n\n//     return (\n//         <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n//             <Card\n//                 sx={{\n//                     boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n//                     borderRadius: '16px',\n//                     overflow: 'hidden',\n//                     animation: 'fadeIn 0.5s ease-in-out',\n//                 }}\n//             >\n//                 <CardContent sx={{ p: 4, background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)' }}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         Profile\n//                     </Typography>\n//                     <Box align=\"center\" sx={{ mb: 3 }}>\n//                         <Avatar\n//                             alt=\"Profile Photo\"\n//                             src={profilePhotoPreview}\n//                             sx={{\n//                                 width: 100,\n//                                 height: 100,\n//                                 mb: 2,\n//                                 border: '3px solid #1976d2',\n//                             }}\n//                         />\n//                         <input\n//                             accept=\"image/*\"\n//                             type=\"file\"\n//                             name=\"profilePhoto\"\n//                             onChange={handleFileChange}\n//                         />\n//                     </Box>\n//                     <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             margin=\"normal\"\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <TextField\n//                                 label=\"Add Skills\"\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 value={skillInput}\n//                                 onChange={(e) => setSkillInput(e.target.value)}\n//                                 onKeyPress={handleSkillAdd}\n//                                 helperText=\"Press Enter to add a skill.\"\n//                             />\n//                             <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n//                                 {profile.skills.map((skill, index) => (\n//                                     <Chip\n//                                         key={index}\n//                                         label={skill}\n//                                         onDelete={() => handleSkillRemove(skill)}\n//                                         color=\"primary\"\n//                                     />\n//                                 ))}\n//                             </Box>\n//                         </Box>\n//                         <FormControl fullWidth sx={{ mt: 2 }}>\n//                             <InputLabel id=\"experience-label\">Experience</InputLabel>\n//                             <Select\n//                                 labelId=\"experience-label\"\n//                                 id=\"experience\"\n//                                 value={profile.experience}\n//                                 onChange={(e) =>\n//                                     setProfile({ ...profile, experience: e.target.value })\n//                                 }\n//                                 label=\"Experience\"\n//                             >\n//                                 <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n//                                 <MenuItem value=\"2-4 years\">2-4 years</MenuItem>\n//                                 <MenuItem value=\"4+ years\">4+ years</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"body1\" gutterBottom>\n//                                 Upload Resume (PDF only)\n//                             </Typography>\n//                             <input\n//                                 accept=\".pdf\"\n//                                 type=\"file\"\n//                                 name=\"resume\"\n//                                 onChange={handleFileChange}\n//                             />\n//                         </Box>\n//                         <Button\n//                             type=\"submit\"\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             fullWidth\n//                             sx={{ mt: 3 }}\n//                         >\n//                             Save Profile\n//                         </Button>\n//                     </Box>\n//                 </CardContent>\n//             </Card>\n//             <Snackbar\n//                 open={alert.open}\n//                 autoHideDuration={4000}\n//                 onClose={handleAlertClose}\n//                 anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//             >\n//                 <Alert\n//                     onClose={handleAlertClose}\n//                     severity={alert.severity}\n//                     sx={{ width: '100%' }}\n//                 >\n//                     {alert.message}\n//                 </Alert>\n//             </Snackbar>\n//         </Container>\n//     );\n// };\n\n// export default Profile;\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport {\n    Container,\n    TextField,\n    Button,\n    Typography,\n    Box,\n    Avatar,\n    Snackbar,\n    Alert,\n    Chip,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Card,\n    CardContent,\n} from '@mui/material';\nimport apiClient from '../api/apiClient'; // API Client for making requests\n\nconst Profile = () => {\n    const [profile, setProfile] = useState({\n        bio: '',\n        skills: [],\n        experience: '',\n        resume: null,\n        profilePhoto: null,\n    });\n\n    const [skillInput, setSkillInput] = useState('');\n    const [profilePhotoPreview, setProfilePhotoPreview] = useState(null);\n    const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n    useEffect(() => {\n        // Fetch existing profile if available\n        const fetchProfile = async () => {\n            try {\n                const response = await apiClient.get('/freelancers/profile', {\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n                });\n                setProfile(response.data.data);\n                if (response.data.data.profilePhoto) {\n                    setProfilePhotoPreview(response.data.data.profilePhoto);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchProfile();\n    }, []);\n\n    const handleFileChange = (e) => {\n        const { name, files } = e.target;\n        setProfile({ ...profile, [name]: files[0] });\n\n        if (name === 'profilePhoto') {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setProfilePhotoPreview(reader.result);\n            };\n            reader.readAsDataURL(files[0]);\n        }\n    };\n\n    const handleSkillAdd = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            e.preventDefault();\n            if (!profile.skills.includes(skillInput.trim())) {\n                setProfile((prev) => ({\n                    ...prev,\n                    skills: [...prev.skills, skillInput.trim()],\n                }));\n                setSkillInput('');\n            } else {\n                setAlert({\n                    open: true,\n                    message: 'Skill already added.',\n                    severity: 'warning',\n                });\n            }\n        }\n    };\n\n    const handleSkillRemove = (skillToRemove) => {\n        setProfile((prev) => ({\n            ...prev,\n            skills: prev.skills.filter((skill) => skill !== skillToRemove),\n        }));\n    };\n\n    const validateProfile = () => {\n        if (!profile.bio.trim() || profile.skills.length === 0 || !profile.experience) {\n            setAlert({\n                open: true,\n                message: 'All fields are required.',\n                severity: 'error',\n            });\n            return false;\n        }\n\n        if (!profile.resume || profile.resume.type !== 'application/pdf') {\n            setAlert({\n                open: true,\n                message: 'Please upload a valid resume in PDF format.',\n                severity: 'error',\n            });\n            return false;\n        }\n\n        if (\n            !profile.profilePhoto ||\n            !['image/jpeg', 'image/png'].includes(profile.profilePhoto.type)\n        ) {\n            setAlert({\n                open: true,\n                message: 'Please upload a valid profile photo in JPG or PNG format.',\n                severity: 'error',\n            });\n            return false;\n        }\n\n        return true;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!validateProfile()) return;\n\n        const formData = new FormData();\n        formData.append('bio', profile.bio);\n        formData.append('skills', JSON.stringify(profile.skills));\n        formData.append('experience', profile.experience);\n        formData.append('resume', profile.resume);\n        formData.append('profilePhoto', profile.profilePhoto);\n\n        try {\n            const response = await apiClient.post('/freelancers', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n            });\n            if (response.status === 201) {\n                setAlert({\n                    open: true,\n                    message: 'Profile created successfully!',\n                    severity: 'success',\n                });\n            }\n        } catch (error) {\n            setAlert({\n                open: true,\n                message: 'Error saving profile. Please try again.',\n                severity: 'error',\n            });\n            console.error(error);\n        }\n    };\n\n    const handleAlertClose = () => {\n        setAlert({ ...alert, open: false });\n    };\n\n    return (\n        <Container maxWidth=\"md\" sx={{ mt: 5, mb: 5 }}>\n            <Card\n                sx={{\n                    boxShadow: '0px 6px 20px rgba(0, 0, 0, 0.15)',\n                    borderRadius: '16px',\n                    overflow: 'hidden',\n                }}\n            >\n                <CardContent sx={{ p: 4, background: 'linear-gradient(135deg, #f3f4f6, #e3e4e7)' }}>\n                    <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                        Profile\n                    </Typography>\n                    <Box align=\"center\" sx={{ mb: 3 }}>\n                        <Avatar\n                            alt=\"Profile Photo\"\n                            src={profilePhotoPreview}\n                            sx={{\n                                width: 100,\n                                height: 100,\n                                mb: 2,\n                                border: '3px solid #1976d2',\n                            }}\n                        />\n                        <input\n                            accept=\"image/*\"\n                            type=\"file\"\n                            name=\"profilePhoto\"\n                            onChange={handleFileChange}\n                        />\n                    </Box>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n                        <TextField\n                            label=\"Bio\"\n                            fullWidth\n                            multiline\n                            rows={4}\n                            margin=\"normal\"\n                            value={profile.bio}\n                            onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                        />\n                        <Box sx={{ mt: 2 }}>\n                            <TextField\n                                label=\"Add Skills\"\n                                fullWidth\n                                margin=\"normal\"\n                                value={skillInput}\n                                onChange={(e) => setSkillInput(e.target.value)}\n                                onKeyPress={handleSkillAdd}\n                                helperText=\"Press Enter to add a skill.\"\n                            />\n                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                                {profile.skills.map((skill, index) => (\n                                    <Chip\n                                        key={index}\n                                        label={skill}\n                                        onDelete={() => handleSkillRemove(skill)}\n                                        color=\"primary\"\n                                    />\n                                ))}\n                            </Box>\n                        </Box>\n                        <FormControl fullWidth sx={{ mt: 2 }}>\n                            <InputLabel id=\"experience-label\">Experience</InputLabel>\n                            <Select\n                                labelId=\"experience-label\"\n                                id=\"experience\"\n                                value={profile.experience}\n                                onChange={(e) =>\n                                    setProfile({ ...profile, experience: e.target.value })\n                                }\n                                label=\"Experience\"\n                            >\n                                <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n                                <MenuItem value=\"2-4 years\">2-4 years</MenuItem>\n                                <MenuItem value=\"4+ years\">4+ years</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"body1\" gutterBottom>\n                                Upload Resume (PDF only)\n                            </Typography>\n                            <input\n                                accept=\".pdf\"\n                                type=\"file\"\n                                name=\"resume\"\n                                onChange={handleFileChange}\n                            />\n                        </Box>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            fullWidth\n                            sx={{ mt: 3 }}\n                        >\n                            Save Profile\n                        </Button>\n                    </Box>\n                </CardContent>\n            </Card>\n            <Snackbar\n                open={alert.open}\n                autoHideDuration={4000}\n                onClose={handleAlertClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert\n                    onClose={handleAlertClose}\n                    severity={alert.severity}\n                    sx={{ width: '100%' }}\n                >\n                    {alert.message}\n                </Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default Profile;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}