{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n//     Dialog,\n//     DialogActions,\n//     DialogContent,\n//     DialogTitle,\n//     MenuItem,\n//     Select,\n//     FormControl,\n//     InputLabel,\n//     IconButton,\n// } from '@mui/material';\n// import { Edit, Add, Delete } from '@mui/icons-material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         skills: [],\n//         workHistory: [],\n//         education: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n//     const [dialog, setDialog] = useState({ type: '', open: false, data: {} });\n//     const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//     // Add skill functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     const handleDialogOpen = (type) => {\n//         setDialog({ type, open: true, data: {} });\n//     };\n\n//     const handleDialogClose = () => {\n//         setDialog({ type: '', open: false, data: {} });\n//     };\n\n//     const handleDialogSubmit = () => {\n//         if (dialog.type === 'workHistory') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 workHistory: [...prev.workHistory, dialog.data],\n//             }));\n//         } else if (dialog.type === 'education') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 education: [...prev.education, dialog.data],\n//             }));\n//         }\n//         handleDialogClose();\n//     };\n\n//     const handleDialogChange = (field, value) => {\n//         setDialog((prev) => ({\n//             ...prev,\n//             data: { ...prev.data, [field]: value },\n//         }));\n//     };\n\n//     const handleEditDialogOpen = () => {\n//         setEditDialogOpen(true);\n//     };\n\n//     const handleEditDialogClose = () => {\n//         setEditDialogOpen(false);\n//     };\n\n//     const handleEditDialogSubmit = () => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             name: dialog.data.name || prev.name,\n//             location: dialog.data.location || prev.location,\n//             hourlyRate: dialog.data.hourlyRate || prev.hourlyRate,\n//         }));\n//         handleEditDialogClose();\n//     };\n\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh', // Full viewport height\n//                 paddingTop: '80px', // Adjust for navbar height\n//             }}\n//         >\n//             <Container maxWidth=\"md\">\n//                 <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                     <Typography\n//                         variant=\"h5\"\n//                         sx={{\n//                             fontWeight: 'bold',\n//                             color: '#0D47A1', // Dark blue color\n//                         }}\n//                     >\n//                         Preview Profile\n//                     </Typography>\n//                     <Typography variant=\"body2\" sx={{ mb: 2 }}>\n//                         Make any edits you want, then submit your profile. You can make more changes after itâ€™s live.\n//                     </Typography>\n//                     <Button variant=\"contained\" color=\"success\">\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Profile Information Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mr: 3 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Box>\n//                                 <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n//                                 <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n//                                 <Typography variant=\"body2\">\n//                                     {profile.hourlyRate ? `$${profile.hourlyRate}.00 Hourly rate` : 'Set your hourly rate'}\n//                                 </Typography>\n//                             </Box>\n//                             <IconButton color=\"primary\" onClick={handleEditDialogOpen}>\n//                                 <Edit />\n//                             </IconButton>\n//                         </Box>\n//                         <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                             {profile.bio || 'Write a brief description about yourself...'}\n//                         </Typography>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Profile Photo</Typography>\n//                             <input type=\"file\" accept=\"image/*\" onChange={(e) => handleFileChange(e, 'profilePhoto')} />\n//                         </Box>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Resume (PDF)</Typography>\n//                             <input type=\"file\" accept=\"application/pdf\" onChange={(e) => handleFileChange(e, 'resume')} />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Skills Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                         />\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Work History Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Work History\n//                         </Typography>\n//                         {profile.workHistory.map((work, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {work.company} | {work.position}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{work.duration}</Typography>\n//                                     <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                         {work.description}\n//                                     </Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     workHistory: prev.workHistory.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('workHistory')}\n//                         >\n//                             Add Work Experience\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Education Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Education\n//                         </Typography>\n//                         {profile.education.map((edu, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {edu.school}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{edu.degree}</Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     education: prev.education.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('education')}\n//                         >\n//                             Add Education\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Dialog for Adding Work History or Education */}\n//                 <Dialog open={dialog.open} onClose={handleDialogClose}>\n//                     <DialogTitle>\n//                         {dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'}\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         {dialog.type === 'workHistory' ? (\n//                             <>\n//                                 <TextField\n//                                     label=\"Company\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('company', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Position\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('position', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Duration\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('duration', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Description\"\n//                                     fullWidth\n//                                     multiline\n//                                     rows={3}\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('description', e.target.value)}\n//                                 />\n//                             </>\n//                         ) : (\n//                             <>\n//                                 <TextField\n//                                     label=\"School\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('school', e.target.value)}\n//                                 />\n//                                 <FormControl fullWidth margin=\"normal\">\n//                                     <InputLabel>Degree</InputLabel>\n//                                     <Select\n//                                         value={dialog.data.degree || ''}\n//                                         onChange={(e) => handleDialogChange('degree', e.target.value)}\n//                                     >\n//                                         <MenuItem value=\"High School\">High School</MenuItem>\n//                                         <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n//                                         <MenuItem value=\"Masters\">Masters</MenuItem>\n//                                         <MenuItem value=\"PhD\">PhD</MenuItem>\n//                                         <MenuItem value=\"Certification Course\">Certification Course</MenuItem>\n//                                     </Select>\n//                                 </FormControl>\n//                             </>\n//                         )}\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={handleDialogClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <Button onClick={handleDialogSubmit} color=\"primary\">\n//                             Add\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n\n//                 {/* Snackbar for Feedback */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity}>{alert.message}</Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;\n\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Avatar, Button, TextField, Chip, Card, CardContent, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: '',\n    location: '',\n    hourlyRate: '',\n    bio: '',\n    jobRole: '',\n    skills: [],\n    profilePhoto: null,\n    resume: null\n  });\n  const [skillInput, setSkillInput] = useState('');\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Add Skill Functionality\n  const handleSkillAdd = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      if (!profile.skills.includes(skillInput.trim())) {\n        setProfile(prev => ({\n          ...prev,\n          skills: [...prev.skills, skillInput.trim()]\n        }));\n        setSkillInput('');\n      } else {\n        setAlert({\n          open: true,\n          message: 'Skill already added.',\n          severity: 'warning'\n        });\n      }\n    }\n  };\n  const handleSkillRemove = skill => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.filter(s => s !== skill)\n    }));\n  };\n\n  // File Upload Handlers\n  const handleFileChange = (e, type) => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfile(prev => ({\n        ...prev,\n        [type]: file\n      }));\n    }\n  };\n\n  // Validation\n  const validateFields = () => {\n    if (!profile.name || !profile.location || !profile.hourlyRate || !profile.bio || !profile.jobRole || profile.skills.length === 0 || !profile.profilePhoto || !profile.resume) {\n      setAlert({\n        open: true,\n        message: 'Please complete all required fields.',\n        severity: 'error'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  // Submit Data to DB\n  const handleSubmitProfile = async () => {\n    if (!validateFields()) return;\n    const formData = new FormData();\n    formData.append('name', profile.name);\n    formData.append('location', profile.location);\n    formData.append('hourlyRate', profile.hourlyRate);\n    formData.append('bio', profile.bio);\n    formData.append('jobRole', profile.jobRole);\n    formData.append('skills', JSON.stringify(profile.skills));\n    formData.append('profilePhoto', profile.profilePhoto);\n    formData.append('resume', profile.resume);\n    try {\n      const token = localStorage.getItem('token'); // Retrieve the token from local storage or another secure place\n      const response = await fetch('http://localhost:3001/api/freelancers/profile', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}` // Add Bearer token here\n        },\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        setAlert({\n          open: true,\n          message: 'Profile submitted successfully!',\n          severity: 'success'\n        });\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: 'Error submitting profile.',\n        severity: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#E3F2FD',\n      // Light blue background\n      minHeight: '100vh',\n      paddingTop: '80px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        sx: {\n          fontWeight: 'bold',\n          color: '#0D47A1',\n          mb: 3\n        },\n        children: \"Profile Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3,\n          mb: 4,\n          borderRadius: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 100,\n                height: 100,\n                mx: 'auto',\n                mb: 2\n              },\n              src: profile.profilePhoto ? URL.createObjectURL(profile.profilePhoto) : 'https://via.placeholder.com/100'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: \"Upload Profile Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/png, image/jpeg\",\n              onChange: e => handleFileChange(e, 'profilePhoto')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            fullWidth: true,\n            required: true,\n            value: profile.name,\n            onChange: e => setProfile({\n              ...profile,\n              name: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            fullWidth: true,\n            required: true,\n            value: profile.location,\n            onChange: e => setProfile({\n              ...profile,\n              location: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Hourly Rate ($)\",\n            fullWidth: true,\n            required: true,\n            type: \"number\",\n            value: profile.hourlyRate,\n            onChange: e => setProfile({\n              ...profile,\n              hourlyRate: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bio\",\n            fullWidth: true,\n            required: true,\n            multiline: true,\n            rows: 4,\n            value: profile.bio,\n            onChange: e => setProfile({\n              ...profile,\n              bio: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Job Role (e.g., Developer, Designer)\",\n            fullWidth: true,\n            required: true,\n            value: profile.jobRole,\n            onChange: e => setProfile({\n              ...profile,\n              jobRole: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 1\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1,\n              mb: 2\n            },\n            children: profile.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: skill,\n              onDelete: () => handleSkillRemove(skill),\n              color: \"primary\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add a skill\",\n            fullWidth: true,\n            value: skillInput,\n            onChange: e => setSkillInput(e.target.value),\n            onKeyPress: handleSkillAdd,\n            helperText: \"Press Enter to add a skill.\",\n            sx: {\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: \"Upload Resume (PDF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: e => handleFileChange(e, 'resume'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleSubmitProfile,\n          sx: {\n            borderRadius: '16px',\n            px: 4\n          },\n          children: \"Submit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: alert.open,\n        autoHideDuration: 4000,\n        onClose: () => setAlert({\n          open: false\n        }),\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: alert.severity,\n          sx: {\n            width: '100%'\n          },\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"ewV28Owhc07K5FGh2mBs8AcVk4Y=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Avatar","Button","TextField","Chip","Card","CardContent","Snackbar","Alert","jsxDEV","_jsxDEV","ProfilePage","_s","profile","setProfile","name","location","hourlyRate","bio","jobRole","skills","profilePhoto","resume","skillInput","setSkillInput","alert","setAlert","open","message","severity","handleSkillAdd","e","key","trim","preventDefault","includes","prev","handleSkillRemove","skill","filter","s","handleFileChange","type","file","target","files","validateFields","length","handleSubmitProfile","formData","FormData","append","JSON","stringify","token","localStorage","getItem","response","fetch","method","headers","body","result","json","success","Error","error","sx","backgroundColor","minHeight","paddingTop","children","maxWidth","variant","align","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","borderRadius","textAlign","width","height","mx","src","URL","createObjectURL","accept","onChange","label","fullWidth","required","value","multiline","rows","display","flexWrap","gap","map","index","onDelete","onKeyPress","helperText","mt","onClick","px","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n//     Dialog,\n//     DialogActions,\n//     DialogContent,\n//     DialogTitle,\n//     MenuItem,\n//     Select,\n//     FormControl,\n//     InputLabel,\n//     IconButton,\n// } from '@mui/material';\n// import { Edit, Add, Delete } from '@mui/icons-material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         skills: [],\n//         workHistory: [],\n//         education: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n//     const [dialog, setDialog] = useState({ type: '', open: false, data: {} });\n//     const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//     // Add skill functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     const handleDialogOpen = (type) => {\n//         setDialog({ type, open: true, data: {} });\n//     };\n\n//     const handleDialogClose = () => {\n//         setDialog({ type: '', open: false, data: {} });\n//     };\n\n//     const handleDialogSubmit = () => {\n//         if (dialog.type === 'workHistory') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 workHistory: [...prev.workHistory, dialog.data],\n//             }));\n//         } else if (dialog.type === 'education') {\n//             setProfile((prev) => ({\n//                 ...prev,\n//                 education: [...prev.education, dialog.data],\n//             }));\n//         }\n//         handleDialogClose();\n//     };\n\n//     const handleDialogChange = (field, value) => {\n//         setDialog((prev) => ({\n//             ...prev,\n//             data: { ...prev.data, [field]: value },\n//         }));\n//     };\n\n//     const handleEditDialogOpen = () => {\n//         setEditDialogOpen(true);\n//     };\n\n//     const handleEditDialogClose = () => {\n//         setEditDialogOpen(false);\n//     };\n\n//     const handleEditDialogSubmit = () => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             name: dialog.data.name || prev.name,\n//             location: dialog.data.location || prev.location,\n//             hourlyRate: dialog.data.hourlyRate || prev.hourlyRate,\n//         }));\n//         handleEditDialogClose();\n//     };\n\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh', // Full viewport height\n//                 paddingTop: '80px', // Adjust for navbar height\n//             }}\n//         >\n//             <Container maxWidth=\"md\">\n//                 <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                     <Typography\n//                         variant=\"h5\"\n//                         sx={{\n//                             fontWeight: 'bold',\n//                             color: '#0D47A1', // Dark blue color\n//                         }}\n//                     >\n//                         Preview Profile\n//                     </Typography>\n//                     <Typography variant=\"body2\" sx={{ mb: 2 }}>\n//                         Make any edits you want, then submit your profile. You can make more changes after itâ€™s live.\n//                     </Typography>\n//                     <Button variant=\"contained\" color=\"success\">\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Profile Information Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mr: 3 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Box>\n//                                 <Typography variant=\"h6\">{profile.name || 'Your Name'}</Typography>\n//                                 <Typography variant=\"body2\">{profile.location || 'Your Location'}</Typography>\n//                                 <Typography variant=\"body2\">\n//                                     {profile.hourlyRate ? `$${profile.hourlyRate}.00 Hourly rate` : 'Set your hourly rate'}\n//                                 </Typography>\n//                             </Box>\n//                             <IconButton color=\"primary\" onClick={handleEditDialogOpen}>\n//                                 <Edit />\n//                             </IconButton>\n//                         </Box>\n//                         <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                             {profile.bio || 'Write a brief description about yourself...'}\n//                         </Typography>\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                         />\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Profile Photo</Typography>\n//                             <input type=\"file\" accept=\"image/*\" onChange={(e) => handleFileChange(e, 'profilePhoto')} />\n//                         </Box>\n//                         <Box sx={{ mt: 2 }}>\n//                             <Typography variant=\"h6\">Upload Resume (PDF)</Typography>\n//                             <input type=\"file\" accept=\"application/pdf\" onChange={(e) => handleFileChange(e, 'resume')} />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Skills Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                         />\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Work History Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Work History\n//                         </Typography>\n//                         {profile.workHistory.map((work, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {work.company} | {work.position}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{work.duration}</Typography>\n//                                     <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                         {work.description}\n//                                     </Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     workHistory: prev.workHistory.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('workHistory')}\n//                         >\n//                             Add Work Experience\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Education Section */}\n//                 <Card sx={{ mb: 4, p: 3 }}>\n//                     <CardContent>\n//                         <Typography variant=\"h6\" sx={{ mb: 2 }}>\n//                             Education\n//                         </Typography>\n//                         {profile.education.map((edu, index) => (\n//                             <Box key={index} sx={{ mb: 2, display: 'flex', justifyContent: 'space-between' }}>\n//                                 <Box>\n//                                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n//                                         {edu.school}\n//                                     </Typography>\n//                                     <Typography variant=\"body2\">{edu.degree}</Typography>\n//                                 </Box>\n//                                 <IconButton color=\"error\" onClick={() => setProfile((prev) => ({\n//                                     ...prev,\n//                                     education: prev.education.filter((_, i) => i !== index),\n//                                 }))}>\n//                                     <Delete />\n//                                 </IconButton>\n//                             </Box>\n//                         ))}\n//                         <Button\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             startIcon={<Add />}\n//                             sx={{ mt: 2 }}\n//                             onClick={() => handleDialogOpen('education')}\n//                         >\n//                             Add Education\n//                         </Button>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Dialog for Adding Work History or Education */}\n//                 <Dialog open={dialog.open} onClose={handleDialogClose}>\n//                     <DialogTitle>\n//                         {dialog.type === 'workHistory' ? 'Add Work Experience' : 'Add Education'}\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         {dialog.type === 'workHistory' ? (\n//                             <>\n//                                 <TextField\n//                                     label=\"Company\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('company', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Position\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('position', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Duration\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('duration', e.target.value)}\n//                                 />\n//                                 <TextField\n//                                     label=\"Description\"\n//                                     fullWidth\n//                                     multiline\n//                                     rows={3}\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('description', e.target.value)}\n//                                 />\n//                             </>\n//                         ) : (\n//                             <>\n//                                 <TextField\n//                                     label=\"School\"\n//                                     fullWidth\n//                                     margin=\"normal\"\n//                                     onChange={(e) => handleDialogChange('school', e.target.value)}\n//                                 />\n//                                 <FormControl fullWidth margin=\"normal\">\n//                                     <InputLabel>Degree</InputLabel>\n//                                     <Select\n//                                         value={dialog.data.degree || ''}\n//                                         onChange={(e) => handleDialogChange('degree', e.target.value)}\n//                                     >\n//                                         <MenuItem value=\"High School\">High School</MenuItem>\n//                                         <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n//                                         <MenuItem value=\"Masters\">Masters</MenuItem>\n//                                         <MenuItem value=\"PhD\">PhD</MenuItem>\n//                                         <MenuItem value=\"Certification Course\">Certification Course</MenuItem>\n//                                     </Select>\n//                                 </FormControl>\n//                             </>\n//                         )}\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={handleDialogClose} color=\"secondary\">\n//                             Cancel\n//                         </Button>\n//                         <Button onClick={handleDialogSubmit} color=\"primary\">\n//                             Add\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n\n//                 {/* Snackbar for Feedback */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity}>{alert.message}</Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport {\n    Container,\n    Typography,\n    Box,\n    Avatar,\n    Button,\n    TextField,\n    Chip,\n    Card,\n    CardContent,\n    Snackbar,\n    Alert,\n} from '@mui/material';\n\nconst ProfilePage = () => {\n    const [profile, setProfile] = useState({\n        name: '',\n        location: '',\n        hourlyRate: '',\n        bio: '',\n        jobRole: '',\n        skills: [],\n        profilePhoto: null,\n        resume: null,\n    });\n\n    const [skillInput, setSkillInput] = useState('');\n    const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n    // Add Skill Functionality\n    const handleSkillAdd = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            e.preventDefault();\n            if (!profile.skills.includes(skillInput.trim())) {\n                setProfile((prev) => ({\n                    ...prev,\n                    skills: [...prev.skills, skillInput.trim()],\n                }));\n                setSkillInput('');\n            } else {\n                setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n            }\n        }\n    };\n\n    const handleSkillRemove = (skill) => {\n        setProfile((prev) => ({\n            ...prev,\n            skills: prev.skills.filter((s) => s !== skill),\n        }));\n    };\n\n    // File Upload Handlers\n    const handleFileChange = (e, type) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfile((prev) => ({ ...prev, [type]: file }));\n        }\n    };\n\n    // Validation\n    const validateFields = () => {\n        if (\n            !profile.name ||\n            !profile.location ||\n            !profile.hourlyRate ||\n            !profile.bio ||\n            !profile.jobRole ||\n            profile.skills.length === 0 ||\n            !profile.profilePhoto ||\n            !profile.resume\n        ) {\n            setAlert({\n                open: true,\n                message: 'Please complete all required fields.',\n                severity: 'error',\n            });\n            return false;\n        }\n        return true;\n    };\n\n    // Submit Data to DB\n    const handleSubmitProfile = async () => {\n        if (!validateFields()) return;\n    \n        const formData = new FormData();\n        formData.append('name', profile.name);\n        formData.append('location', profile.location);\n        formData.append('hourlyRate', profile.hourlyRate);\n        formData.append('bio', profile.bio);\n        formData.append('jobRole', profile.jobRole);\n        formData.append('skills', JSON.stringify(profile.skills));\n        formData.append('profilePhoto', profile.profilePhoto);\n        formData.append('resume', profile.resume);\n    \n        try {\nconst token = localStorage.getItem('token'); // Retrieve the token from local storage or another secure place\nconst response = await fetch('http://localhost:3001/api/freelancers/profile', {\nmethod: 'POST',\nheaders: {\n'Authorization': `Bearer ${token}`, // Add Bearer token here\n},\nbody: formData,\n});\n    \n            const result = await response.json();\n    \n            if (result.success) {\n                setAlert({ open: true, message: 'Profile submitted successfully!', severity: 'success' });\n            } else {\n                throw new Error(result.message);\n            }\n        } catch (error) {\n            setAlert({ open: true, message: 'Error submitting profile.', severity: 'error' });\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: '#E3F2FD', // Light blue background\n                minHeight: '100vh',\n                paddingTop: '80px',\n            }}\n        >\n            <Container maxWidth=\"sm\">\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    sx={{ fontWeight: 'bold', color: '#0D47A1', mb: 3 }}\n                >\n                    Profile Details\n                </Typography>\n\n                <Card sx={{ p: 3, mb: 4, borderRadius: '16px' }}>\n                    <CardContent>\n                        {/* Profile Photo */}\n                        <Box sx={{ textAlign: 'center', mb: 3 }}>\n                            <Avatar\n                                sx={{ width: 100, height: 100, mx: 'auto', mb: 2 }}\n                                src={\n                                    profile.profilePhoto\n                                        ? URL.createObjectURL(profile.profilePhoto)\n                                        : 'https://via.placeholder.com/100'\n                                }\n                            />\n                            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                Upload Profile Photo\n                            </Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"image/png, image/jpeg\"\n                                onChange={(e) => handleFileChange(e, 'profilePhoto')}\n                            />\n                        </Box>\n\n                        {/* Basic Information */}\n                        <TextField\n                            label=\"Name\"\n                            fullWidth\n                            required\n                            value={profile.name}\n                            onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n                        <TextField\n                            label=\"Location\"\n                            fullWidth\n                            required\n                            value={profile.location}\n                            onChange={(e) => setProfile({ ...profile, location: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n                        <TextField\n                            label=\"Hourly Rate ($)\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            value={profile.hourlyRate}\n                            onChange={(e) => setProfile({ ...profile, hourlyRate: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Bio Section */}\n                        <TextField\n                            label=\"Bio\"\n                            fullWidth\n                            required\n                            multiline\n                            rows={4}\n                            value={profile.bio}\n                            onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Job Role Section */}\n                        <TextField\n                            label=\"Job Role (e.g., Developer, Designer)\"\n                            fullWidth\n                            required\n                            value={profile.jobRole}\n                            onChange={(e) => setProfile({ ...profile, jobRole: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Skills Section */}\n                        <Typography variant=\"h6\" sx={{ mb: 1 }}>\n                            Skills\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                            {profile.skills.map((skill, index) => (\n                                <Chip\n                                    key={index}\n                                    label={skill}\n                                    onDelete={() => handleSkillRemove(skill)}\n                                    color=\"primary\"\n                                />\n                            ))}\n                        </Box>\n                        <TextField\n                            label=\"Add a skill\"\n                            fullWidth\n                            value={skillInput}\n                            onChange={(e) => setSkillInput(e.target.value)}\n                            onKeyPress={handleSkillAdd}\n                            helperText=\"Press Enter to add a skill.\"\n                            sx={{ borderRadius: '16px' }}\n                        />\n\n                        {/* Resume Upload */}\n                        <Box sx={{ mt: 3 }}>\n                            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                Upload Resume (PDF)\n                            </Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"application/pdf\"\n                                onChange={(e) => handleFileChange(e, 'resume')}\n                                required\n                            />\n                        </Box>\n                    </CardContent>\n                </Card>\n\n                {/* Submit Button */}\n                <Box sx={{ textAlign: 'center' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"success\"\n                        onClick={handleSubmitProfile}\n                        sx={{ borderRadius: '16px', px: 4 }}\n                    >\n                        Submit Profile\n                    </Button>\n                </Box>\n\n                {/* Snackbar for Alerts */}\n                <Snackbar\n                    open={alert.open}\n                    autoHideDuration={4000}\n                    onClose={() => setAlert({ open: false })}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                >\n                    <Alert severity={alert.severity} sx={{ width: '100%' }}>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n            </Container>\n        </Box>\n    );\n};\n\nexport default ProfilePage;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}