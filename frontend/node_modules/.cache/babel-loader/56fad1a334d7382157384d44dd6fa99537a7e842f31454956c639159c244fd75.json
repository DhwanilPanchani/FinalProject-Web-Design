{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Avatar, Button, TextField, Chip, Card, CardContent, Snackbar, Alert, Fade } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = ({\n  onUpdateProfilePhoto\n}) => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: '',\n    email: '',\n    location: '',\n    hourlyRate: '',\n    bio: '',\n    jobRole: '',\n    skills: [],\n    profilePhoto: null,\n    resume: null\n  });\n  const [skillInput, setSkillInput] = useState('');\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [showCard, setShowCard] = useState(false); // Show profile card after submission\n\n  // Populate email from localStorage on component mount\n  useEffect(() => {\n    const email = localStorage.getItem('email'); // Ensure this key is stored during login\n    setProfile(prev => ({\n      ...prev,\n      email\n    }));\n  }, []);\n\n  // Add Skill Functionality\n  const handleSkillAdd = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      if (!profile.skills.includes(skillInput.trim())) {\n        setProfile(prev => ({\n          ...prev,\n          skills: [...prev.skills, skillInput.trim()]\n        }));\n        setSkillInput('');\n      } else {\n        setAlert({\n          open: true,\n          message: 'Skill already added.',\n          severity: 'warning'\n        });\n      }\n    }\n  };\n  const handleSkillRemove = skill => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.filter(s => s !== skill)\n    }));\n  };\n\n  // File Upload Handlers\n  const handleFileChange = (e, type) => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfile(prev => ({\n        ...prev,\n        [type]: file\n      }));\n    }\n  };\n\n  // Validation\n  const validateFields = () => {\n    if (!profile.name || !profile.location || !profile.hourlyRate || !profile.bio || !profile.jobRole || profile.skills.length === 0 || !profile.profilePhoto || !profile.resume) {\n      setAlert({\n        open: true,\n        message: 'Please complete all required fields.',\n        severity: 'error'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  // Submit Data to DB\n  const handleSubmitProfile = async () => {\n    if (!validateFields()) return;\n    const formData = new FormData();\n    formData.append('name', profile.name);\n    formData.append('email', profile.email);\n    formData.append('location', profile.location);\n    formData.append('hourlyRate', profile.hourlyRate);\n    formData.append('bio', profile.bio);\n    formData.append('jobRole', profile.jobRole);\n    formData.append('skills', JSON.stringify(profile.skills));\n    formData.append('profilePhoto', profile.profilePhoto);\n    formData.append('resume', profile.resume);\n    const token = localStorage.getItem('token'); // Retrieve token from localStorage\n\n    if (!token) {\n      setAlert({\n        open: true,\n        message: 'No token found. Please log in again.',\n        severity: 'error'\n      });\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/api/freelancers/profile', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        setAlert({\n          open: true,\n          message: 'Profile submitted successfully!',\n          severity: 'success'\n        });\n        onUpdateProfilePhoto(URL.createObjectURL(profile.profilePhoto)); // Update Navbar photo\n        setShowCard(true); // Show profile card\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: 'Error submitting profile: ' + error.message,\n        severity: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#E3F2FD',\n      // Light blue background\n      minHeight: '100vh',\n      paddingTop: '80px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        sx: {\n          fontWeight: 'bold',\n          color: '#0D47A1',\n          mb: 3\n        },\n        children: \"Profile Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3,\n          mb: 4,\n          borderRadius: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 100,\n                height: 100,\n                mx: 'auto',\n                mb: 2\n              },\n              src: profile.profilePhoto ? URL.createObjectURL(profile.profilePhoto) : 'https://via.placeholder.com/100'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: \"Upload Profile Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/png, image/jpeg\",\n              onChange: e => handleFileChange(e, 'profilePhoto')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            fullWidth: true,\n            value: profile.email,\n            disabled: true,\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            fullWidth: true,\n            required: true,\n            value: profile.name,\n            onChange: e => setProfile({\n              ...profile,\n              name: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            fullWidth: true,\n            required: true,\n            value: profile.location,\n            onChange: e => setProfile({\n              ...profile,\n              location: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Hourly Rate ($)\",\n            fullWidth: true,\n            required: true,\n            type: \"number\",\n            value: profile.hourlyRate,\n            onChange: e => setProfile({\n              ...profile,\n              hourlyRate: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bio\",\n            fullWidth: true,\n            required: true,\n            multiline: true,\n            rows: 4,\n            value: profile.bio,\n            onChange: e => setProfile({\n              ...profile,\n              bio: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Job Role (e.g., Developer, Designer)\",\n            fullWidth: true,\n            required: true,\n            value: profile.jobRole,\n            onChange: e => setProfile({\n              ...profile,\n              jobRole: e.target.value\n            }),\n            sx: {\n              mb: 2,\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 1\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1,\n              mb: 2\n            },\n            children: profile.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: skill,\n              onDelete: () => handleSkillRemove(skill),\n              color: \"primary\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Add a skill\",\n            fullWidth: true,\n            value: skillInput,\n            onChange: e => setSkillInput(e.target.value),\n            onKeyPress: handleSkillAdd,\n            helperText: \"Press Enter to add a skill.\",\n            sx: {\n              borderRadius: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: \"Upload Resume (PDF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: e => handleFileChange(e, 'resume'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleSubmitProfile,\n          sx: {\n            borderRadius: '16px',\n            px: 4\n          },\n          children: \"Submit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: alert.open,\n        autoHideDuration: 4000,\n        onClose: () => setAlert({\n          open: false\n        }),\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: alert.severity,\n          sx: {\n            width: '100%'\n          },\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), showCard && /*#__PURE__*/_jsxDEV(Fade, {\n        in: showCard,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mt: 4,\n            p: 3,\n            borderRadius: '16px',\n            backgroundColor: '#f0f4f8'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"Your Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Name: \", profile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Email: \", profile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Location: \", profile.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Hourly Rate: $\", profile.hourlyRate, \"/hr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Bio: \", profile.bio]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Job Role: \", profile.jobRole]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Skills: \", profile.skills.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"ZwIrSLjTwXs+FJGZjYiNMuLIGb0=\");\n_c = ProfilePage;\nexport default ProfilePage;\n\n// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n// } from '@mui/material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         jobRole: '',\n//         skills: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     // Add Skill Functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     // File Upload Handlers\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     // Validation\n//     const validateFields = () => {\n//         if (\n//             !profile.name ||\n//             !profile.location ||\n//             !profile.hourlyRate ||\n//             !profile.bio ||\n//             !profile.jobRole ||\n//             profile.skills.length === 0 ||\n//             !profile.profilePhoto ||\n//             !profile.resume\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please complete all required fields.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n//         return true;\n//     };\n//     const handleLogin = async (email, password) => {\n//         try {\n//             const response = await fetch('http://localhost:3001/api/auth/login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ email, password }),\n//             });\n\n//             const data = await response.json();\n\n//             if (data.success) {\n//                 // Save the token to localStorage\n//                 localStorage.setItem('token', data.data.token);\n//                 alert('Login successful!');\n//             } else {\n//                 alert(data.message);\n//             }\n//         } catch (error) {\n//             console.error('Error during login:', error);\n//             alert('Login failed.');\n//         }\n//     };\n\n//     // Submit Data to DB\n//     const handleSubmitProfile = async () => {\n//         if (!validateFields()) return;\n\n//         const formData = new FormData();\n//         formData.append('name', profile.name);\n//         formData.append('location', profile.location);\n//         formData.append('hourlyRate', profile.hourlyRate);\n//         formData.append('bio', profile.bio);\n//         formData.append('jobRole', profile.jobRole);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('profilePhoto', profile.profilePhoto);\n//         formData.append('resume', profile.resume);\n\n//         const token = localStorage.getItem('token'); // Retrieve token from localStorage\n\n//         if (!token) {\n//             setAlert({\n//                 open: true,\n//                 message: 'No token found. Please log in again.',\n//                 severity: 'error',\n//             });\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch('http://localhost:3001/api/freelancers/profile', {\n//                 method: 'POST',\n//                 headers: {\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//                 body: formData,\n//             });\n\n//             const result = await response.json();\n\n//             if (result.success) {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Profile submitted successfully!',\n//                     severity: 'success',\n//                 });\n//             } else {\n//                 throw new Error(result.message);\n//             }\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error submitting profile: ' + error.message,\n//                 severity: 'error',\n//             });\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh',\n//                 paddingTop: '80px',\n//             }}\n//         >\n//             <Container maxWidth=\"sm\">\n//                 <Typography\n//                     variant=\"h5\"\n//                     align=\"center\"\n//                     sx={{ fontWeight: 'bold', color: '#0D47A1', mb: 3 }}\n//                 >\n//                     Profile Details\n//                 </Typography>\n\n//                 <Card sx={{ p: 3, mb: 4, borderRadius: '16px' }}>\n//                     <CardContent>\n//                         {/* Profile Photo */}\n//                         <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mx: 'auto', mb: 2 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                 Upload Profile Photo\n//                             </Typography>\n//                             <input\n//                                 type=\"file\"\n//                                 accept=\"image/png, image/jpeg\"\n//                                 onChange={(e) => handleFileChange(e, 'profilePhoto')}\n//                             />\n//                         </Box>\n\n//                         {/* Basic Information */}\n//                         <TextField\n//                             label=\"Name\"\n//                             fullWidth\n//                             required\n//                             value={profile.name}\n//                             onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n//                         <TextField\n//                             label=\"Location\"\n//                             fullWidth\n//                             required\n//                             value={profile.location}\n//                             onChange={(e) => setProfile({ ...profile, location: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n//                         <TextField\n//                             label=\"Hourly Rate ($)\"\n//                             fullWidth\n//                             required\n//                             type=\"number\"\n//                             value={profile.hourlyRate}\n//                             onChange={(e) => setProfile({ ...profile, hourlyRate: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Bio Section */}\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             required\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Job Role Section */}\n//                         <TextField\n//                             label=\"Job Role (e.g., Developer, Designer)\"\n//                             fullWidth\n//                             required\n//                             value={profile.jobRole}\n//                             onChange={(e) => setProfile({ ...profile, jobRole: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Skills Section */}\n//                         <Typography variant=\"h6\" sx={{ mb: 1 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                             sx={{ borderRadius: '16px' }}\n//                         />\n\n//                         {/* Resume Upload */}\n//                         <Box sx={{ mt: 3 }}>\n//                             <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                 Upload Resume (PDF)\n//                             </Typography>\n//                             <input\n//                                 type=\"file\"\n//                                 accept=\"application/pdf\"\n//                                 onChange={(e) => handleFileChange(e, 'resume')}\n//                                 required\n//                             />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Submit Button */}\n//                 <Box sx={{ textAlign: 'center' }}>\n//                     <Button\n//                         variant=\"contained\"\n//                         color=\"success\"\n//                         onClick={handleSubmitProfile}\n//                         sx={{ borderRadius: '16px', px: 4 }}\n//                     >\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Snackbar for Alerts */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity} sx={{ width: '100%' }}>\n//                         {alert.message}\n//                     </Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Avatar","Button","TextField","Chip","Card","CardContent","Snackbar","Alert","Fade","jsxDEV","_jsxDEV","ProfilePage","onUpdateProfilePhoto","_s","profile","setProfile","name","email","location","hourlyRate","bio","jobRole","skills","profilePhoto","resume","skillInput","setSkillInput","alert","setAlert","open","message","severity","showCard","setShowCard","localStorage","getItem","prev","handleSkillAdd","e","key","trim","preventDefault","includes","handleSkillRemove","skill","filter","s","handleFileChange","type","file","target","files","validateFields","length","handleSubmitProfile","formData","FormData","append","JSON","stringify","token","response","fetch","method","headers","Authorization","body","result","json","success","URL","createObjectURL","Error","error","sx","backgroundColor","minHeight","paddingTop","children","maxWidth","variant","align","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","borderRadius","textAlign","width","height","mx","src","accept","onChange","label","fullWidth","value","disabled","required","multiline","rows","display","flexWrap","gap","map","index","onDelete","onKeyPress","helperText","mt","onClick","px","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","in","join","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Container,\n    Typography,\n    Box,\n    Avatar,\n    Button,\n    TextField,\n    Chip,\n    Card,\n    CardContent,\n    Snackbar,\n    Alert,\n    Fade,\n} from '@mui/material';\n\nconst ProfilePage = ({ onUpdateProfilePhoto }) => {\n    const [profile, setProfile] = useState({\n        name: '',\n        email: '',\n        location: '',\n        hourlyRate: '',\n        bio: '',\n        jobRole: '',\n        skills: [],\n        profilePhoto: null,\n        resume: null,\n    });\n\n    const [skillInput, setSkillInput] = useState('');\n    const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n    const [showCard, setShowCard] = useState(false); // Show profile card after submission\n\n    // Populate email from localStorage on component mount\n    useEffect(() => {\n        const email = localStorage.getItem('email'); // Ensure this key is stored during login\n        setProfile((prev) => ({ ...prev, email }));\n    }, []);\n\n    // Add Skill Functionality\n    const handleSkillAdd = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            e.preventDefault();\n            if (!profile.skills.includes(skillInput.trim())) {\n                setProfile((prev) => ({\n                    ...prev,\n                    skills: [...prev.skills, skillInput.trim()],\n                }));\n                setSkillInput('');\n            } else {\n                setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n            }\n        }\n    };\n\n    const handleSkillRemove = (skill) => {\n        setProfile((prev) => ({\n            ...prev,\n            skills: prev.skills.filter((s) => s !== skill),\n        }));\n    };\n\n    // File Upload Handlers\n    const handleFileChange = (e, type) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfile((prev) => ({ ...prev, [type]: file }));\n        }\n    };\n\n    // Validation\n    const validateFields = () => {\n        if (\n            !profile.name ||\n            !profile.location ||\n            !profile.hourlyRate ||\n            !profile.bio ||\n            !profile.jobRole ||\n            profile.skills.length === 0 ||\n            !profile.profilePhoto ||\n            !profile.resume\n        ) {\n            setAlert({\n                open: true,\n                message: 'Please complete all required fields.',\n                severity: 'error',\n            });\n            return false;\n        }\n        return true;\n    };\n\n    // Submit Data to DB\n    const handleSubmitProfile = async () => {\n        if (!validateFields()) return;\n\n        const formData = new FormData();\n        formData.append('name', profile.name);\n        formData.append('email', profile.email);\n        formData.append('location', profile.location);\n        formData.append('hourlyRate', profile.hourlyRate);\n        formData.append('bio', profile.bio);\n        formData.append('jobRole', profile.jobRole);\n        formData.append('skills', JSON.stringify(profile.skills));\n        formData.append('profilePhoto', profile.profilePhoto);\n        formData.append('resume', profile.resume);\n\n        const token = localStorage.getItem('token'); // Retrieve token from localStorage\n\n        if (!token) {\n            setAlert({\n                open: true,\n                message: 'No token found. Please log in again.',\n                severity: 'error',\n            });\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:3001/api/freelancers/profile', {\n                method: 'POST',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                setAlert({\n                    open: true,\n                    message: 'Profile submitted successfully!',\n                    severity: 'success',\n                });\n                onUpdateProfilePhoto(URL.createObjectURL(profile.profilePhoto)); // Update Navbar photo\n                setShowCard(true); // Show profile card\n            } else {\n                throw new Error(result.message);\n            }\n        } catch (error) {\n            setAlert({\n                open: true,\n                message: 'Error submitting profile: ' + error.message,\n                severity: 'error',\n            });\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                backgroundColor: '#E3F2FD', // Light blue background\n                minHeight: '100vh',\n                paddingTop: '80px',\n            }}\n        >\n            <Container maxWidth=\"sm\">\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    sx={{ fontWeight: 'bold', color: '#0D47A1', mb: 3 }}\n                >\n                    Profile Details\n                </Typography>\n\n                <Card sx={{ p: 3, mb: 4, borderRadius: '16px' }}>\n                    <CardContent>\n                        {/* Profile Photo */}\n                        <Box sx={{ textAlign: 'center', mb: 3 }}>\n                            <Avatar\n                                sx={{ width: 100, height: 100, mx: 'auto', mb: 2 }}\n                                src={\n                                    profile.profilePhoto\n                                        ? URL.createObjectURL(profile.profilePhoto)\n                                        : 'https://via.placeholder.com/100'\n                                }\n                            />\n                            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                Upload Profile Photo\n                            </Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"image/png, image/jpeg\"\n                                onChange={(e) => handleFileChange(e, 'profilePhoto')}\n                            />\n                        </Box>\n\n                        {/* Basic Information */}\n                        <TextField\n                            label=\"Email\"\n                            fullWidth\n                            value={profile.email}\n                            disabled\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n                        <TextField\n                            label=\"Name\"\n                            fullWidth\n                            required\n                            value={profile.name}\n                            onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n                        <TextField\n                            label=\"Location\"\n                            fullWidth\n                            required\n                            value={profile.location}\n                            onChange={(e) => setProfile({ ...profile, location: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n                        <TextField\n                            label=\"Hourly Rate ($)\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            value={profile.hourlyRate}\n                            onChange={(e) => setProfile({ ...profile, hourlyRate: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Bio Section */}\n                        <TextField\n                            label=\"Bio\"\n                            fullWidth\n                            required\n                            multiline\n                            rows={4}\n                            value={profile.bio}\n                            onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Job Role Section */}\n                        <TextField\n                            label=\"Job Role (e.g., Developer, Designer)\"\n                            fullWidth\n                            required\n                            value={profile.jobRole}\n                            onChange={(e) => setProfile({ ...profile, jobRole: e.target.value })}\n                            sx={{ mb: 2, borderRadius: '16px' }}\n                        />\n\n                        {/* Skills Section */}\n                        <Typography variant=\"h6\" sx={{ mb: 1 }}>\n                            Skills\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n                            {profile.skills.map((skill, index) => (\n                                <Chip\n                                    key={index}\n                                    label={skill}\n                                    onDelete={() => handleSkillRemove(skill)}\n                                    color=\"primary\"\n                                />\n                            ))}\n                        </Box>\n                        <TextField\n                            label=\"Add a skill\"\n                            fullWidth\n                            value={skillInput}\n                            onChange={(e) => setSkillInput(e.target.value)}\n                            onKeyPress={handleSkillAdd}\n                            helperText=\"Press Enter to add a skill.\"\n                            sx={{ borderRadius: '16px' }}\n                        />\n\n                        {/* Resume Upload */}\n                        <Box sx={{ mt: 3 }}>\n                            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                Upload Resume (PDF)\n                            </Typography>\n                            <input\n                                type=\"file\"\n                                accept=\"application/pdf\"\n                                onChange={(e) => handleFileChange(e, 'resume')}\n                                required\n                            />\n                        </Box>\n                    </CardContent>\n                </Card>\n\n                {/* Submit Button */}\n                <Box sx={{ textAlign: 'center' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"success\"\n                        onClick={handleSubmitProfile}\n                        sx={{ borderRadius: '16px', px: 4 }}\n                    >\n                        Submit Profile\n                    </Button>\n                </Box>\n\n                {/* Snackbar for Alerts */}\n                <Snackbar\n                    open={alert.open}\n                    autoHideDuration={4000}\n                    onClose={() => setAlert({ open: false })}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                >\n                    <Alert severity={alert.severity} sx={{ width: '100%' }}>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n\n                {/* Profile Card Animation */}\n                {showCard && (\n                    <Fade in={showCard}>\n                        <Card sx={{ mt: 4, p: 3, borderRadius: '16px', backgroundColor: '#f0f4f8' }}>\n                            <CardContent>\n                                <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                                    Your Profile\n                                </Typography>\n                                <Typography>Name: {profile.name}</Typography>\n                                <Typography>Email: {profile.email}</Typography>\n                                <Typography>Location: {profile.location}</Typography>\n                                <Typography>Hourly Rate: ${profile.hourlyRate}/hr</Typography>\n                                <Typography>Bio: {profile.bio}</Typography>\n                                <Typography>Job Role: {profile.jobRole}</Typography>\n                                <Typography>\n                                    Skills: {profile.skills.join(', ')}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Fade>\n                )}\n            </Container>\n        </Box>\n    );\n};\n\nexport default ProfilePage;\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import {\n//     Container,\n//     Typography,\n//     Box,\n//     Avatar,\n//     Button,\n//     TextField,\n//     Chip,\n//     Card,\n//     CardContent,\n//     Snackbar,\n//     Alert,\n// } from '@mui/material';\n\n// const ProfilePage = () => {\n//     const [profile, setProfile] = useState({\n//         name: '',\n//         location: '',\n//         hourlyRate: '',\n//         bio: '',\n//         jobRole: '',\n//         skills: [],\n//         profilePhoto: null,\n//         resume: null,\n//     });\n\n//     const [skillInput, setSkillInput] = useState('');\n//     const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n\n//     // Add Skill Functionality\n//     const handleSkillAdd = (e) => {\n//         if (e.key === 'Enter' && skillInput.trim()) {\n//             e.preventDefault();\n//             if (!profile.skills.includes(skillInput.trim())) {\n//                 setProfile((prev) => ({\n//                     ...prev,\n//                     skills: [...prev.skills, skillInput.trim()],\n//                 }));\n//                 setSkillInput('');\n//             } else {\n//                 setAlert({ open: true, message: 'Skill already added.', severity: 'warning' });\n//             }\n//         }\n//     };\n\n//     const handleSkillRemove = (skill) => {\n//         setProfile((prev) => ({\n//             ...prev,\n//             skills: prev.skills.filter((s) => s !== skill),\n//         }));\n//     };\n\n//     // File Upload Handlers\n//     const handleFileChange = (e, type) => {\n//         const file = e.target.files[0];\n//         if (file) {\n//             setProfile((prev) => ({ ...prev, [type]: file }));\n//         }\n//     };\n\n//     // Validation\n//     const validateFields = () => {\n//         if (\n//             !profile.name ||\n//             !profile.location ||\n//             !profile.hourlyRate ||\n//             !profile.bio ||\n//             !profile.jobRole ||\n//             profile.skills.length === 0 ||\n//             !profile.profilePhoto ||\n//             !profile.resume\n//         ) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Please complete all required fields.',\n//                 severity: 'error',\n//             });\n//             return false;\n//         }\n//         return true;\n//     };\n//     const handleLogin = async (email, password) => {\n//         try {\n//             const response = await fetch('http://localhost:3001/api/auth/login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ email, password }),\n//             });\n    \n//             const data = await response.json();\n    \n//             if (data.success) {\n//                 // Save the token to localStorage\n//                 localStorage.setItem('token', data.data.token);\n//                 alert('Login successful!');\n//             } else {\n//                 alert(data.message);\n//             }\n//         } catch (error) {\n//             console.error('Error during login:', error);\n//             alert('Login failed.');\n//         }\n//     };\n\n//     // Submit Data to DB\n//     const handleSubmitProfile = async () => {\n//         if (!validateFields()) return;\n    \n//         const formData = new FormData();\n//         formData.append('name', profile.name);\n//         formData.append('location', profile.location);\n//         formData.append('hourlyRate', profile.hourlyRate);\n//         formData.append('bio', profile.bio);\n//         formData.append('jobRole', profile.jobRole);\n//         formData.append('skills', JSON.stringify(profile.skills));\n//         formData.append('profilePhoto', profile.profilePhoto);\n//         formData.append('resume', profile.resume);\n    \n//         const token = localStorage.getItem('token'); // Retrieve token from localStorage\n    \n//         if (!token) {\n//             setAlert({\n//                 open: true,\n//                 message: 'No token found. Please log in again.',\n//                 severity: 'error',\n//             });\n//             return;\n//         }\n    \n//         try {\n//             const response = await fetch('http://localhost:3001/api/freelancers/profile', {\n//                 method: 'POST',\n//                 headers: {\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//                 body: formData,\n//             });\n    \n//             const result = await response.json();\n    \n//             if (result.success) {\n//                 setAlert({\n//                     open: true,\n//                     message: 'Profile submitted successfully!',\n//                     severity: 'success',\n//                 });\n//             } else {\n//                 throw new Error(result.message);\n//             }\n//         } catch (error) {\n//             setAlert({\n//                 open: true,\n//                 message: 'Error submitting profile: ' + error.message,\n//                 severity: 'error',\n//             });\n//         }\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 backgroundColor: '#E3F2FD', // Light blue background\n//                 minHeight: '100vh',\n//                 paddingTop: '80px',\n//             }}\n//         >\n//             <Container maxWidth=\"sm\">\n//                 <Typography\n//                     variant=\"h5\"\n//                     align=\"center\"\n//                     sx={{ fontWeight: 'bold', color: '#0D47A1', mb: 3 }}\n//                 >\n//                     Profile Details\n//                 </Typography>\n\n//                 <Card sx={{ p: 3, mb: 4, borderRadius: '16px' }}>\n//                     <CardContent>\n//                         {/* Profile Photo */}\n//                         <Box sx={{ textAlign: 'center', mb: 3 }}>\n//                             <Avatar\n//                                 sx={{ width: 100, height: 100, mx: 'auto', mb: 2 }}\n//                                 src={\n//                                     profile.profilePhoto\n//                                         ? URL.createObjectURL(profile.profilePhoto)\n//                                         : 'https://via.placeholder.com/100'\n//                                 }\n//                             />\n//                             <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                 Upload Profile Photo\n//                             </Typography>\n//                             <input\n//                                 type=\"file\"\n//                                 accept=\"image/png, image/jpeg\"\n//                                 onChange={(e) => handleFileChange(e, 'profilePhoto')}\n//                             />\n//                         </Box>\n\n//                         {/* Basic Information */}\n//                         <TextField\n//                             label=\"Name\"\n//                             fullWidth\n//                             required\n//                             value={profile.name}\n//                             onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n//                         <TextField\n//                             label=\"Location\"\n//                             fullWidth\n//                             required\n//                             value={profile.location}\n//                             onChange={(e) => setProfile({ ...profile, location: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n//                         <TextField\n//                             label=\"Hourly Rate ($)\"\n//                             fullWidth\n//                             required\n//                             type=\"number\"\n//                             value={profile.hourlyRate}\n//                             onChange={(e) => setProfile({ ...profile, hourlyRate: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Bio Section */}\n//                         <TextField\n//                             label=\"Bio\"\n//                             fullWidth\n//                             required\n//                             multiline\n//                             rows={4}\n//                             value={profile.bio}\n//                             onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Job Role Section */}\n//                         <TextField\n//                             label=\"Job Role (e.g., Developer, Designer)\"\n//                             fullWidth\n//                             required\n//                             value={profile.jobRole}\n//                             onChange={(e) => setProfile({ ...profile, jobRole: e.target.value })}\n//                             sx={{ mb: 2, borderRadius: '16px' }}\n//                         />\n\n//                         {/* Skills Section */}\n//                         <Typography variant=\"h6\" sx={{ mb: 1 }}>\n//                             Skills\n//                         </Typography>\n//                         <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n//                             {profile.skills.map((skill, index) => (\n//                                 <Chip\n//                                     key={index}\n//                                     label={skill}\n//                                     onDelete={() => handleSkillRemove(skill)}\n//                                     color=\"primary\"\n//                                 />\n//                             ))}\n//                         </Box>\n//                         <TextField\n//                             label=\"Add a skill\"\n//                             fullWidth\n//                             value={skillInput}\n//                             onChange={(e) => setSkillInput(e.target.value)}\n//                             onKeyPress={handleSkillAdd}\n//                             helperText=\"Press Enter to add a skill.\"\n//                             sx={{ borderRadius: '16px' }}\n//                         />\n\n//                         {/* Resume Upload */}\n//                         <Box sx={{ mt: 3 }}>\n//                             <Typography variant=\"body2\" sx={{ mb: 1 }}>\n//                                 Upload Resume (PDF)\n//                             </Typography>\n//                             <input\n//                                 type=\"file\"\n//                                 accept=\"application/pdf\"\n//                                 onChange={(e) => handleFileChange(e, 'resume')}\n//                                 required\n//                             />\n//                         </Box>\n//                     </CardContent>\n//                 </Card>\n\n//                 {/* Submit Button */}\n//                 <Box sx={{ textAlign: 'center' }}>\n//                     <Button\n//                         variant=\"contained\"\n//                         color=\"success\"\n//                         onClick={handleSubmitProfile}\n//                         sx={{ borderRadius: '16px', px: 4 }}\n//                     >\n//                         Submit Profile\n//                     </Button>\n//                 </Box>\n\n//                 {/* Snackbar for Alerts */}\n//                 <Snackbar\n//                     open={alert.open}\n//                     autoHideDuration={4000}\n//                     onClose={() => setAlert({ open: false })}\n//                     anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                 >\n//                     <Alert severity={alert.severity} sx={{ width: '100%' }}>\n//                         {alert.message}\n//                     </Alert>\n//                 </Snackbar>\n//             </Container>\n//         </Box>\n//     );\n// };\n\n// export default ProfilePage;"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}