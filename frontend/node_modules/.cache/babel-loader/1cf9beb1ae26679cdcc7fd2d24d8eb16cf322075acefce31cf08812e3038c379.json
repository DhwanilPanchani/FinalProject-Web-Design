{"ast":null,"code":"var _jsxFileName = \"/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/components/JobList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Grid, Card, CardContent, Typography, Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await apiClient.get('/jobs');\n        setJobs(response.data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    sx: {\n      mt: 3\n    },\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mt: 1\n            },\n            children: [\"Location: \", job.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: [\"Hourly Rate: $\", job.hourlyRate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: `/jobs/${job._id}`,\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 2\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, job._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(JobList, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","apiClient","Grid","Card","CardContent","Typography","Button","Link","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","fetchJobs","response","get","data","error","console","container","spacing","sx","mt","children","map","job","item","xs","sm","md","variant","title","fileName","_jsxFileName","lineNumber","columnNumber","color","description","location","hourlyRate","component","to","_id","_c","$RefreshReg$"],"sources":["/Users/dhwanilpanchani/Desktop/Project Web Design/frontend/src/components/JobList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\nimport { Grid, Card, CardContent, Typography, Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst JobList = () => {\n    const [jobs, setJobs] = useState([]);\n\n    useEffect(() => {\n        const fetchJobs = async () => {\n            try {\n                const response = await apiClient.get('/jobs');\n                setJobs(response.data.data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchJobs();\n    }, []);\n\n    return (\n        <Grid container spacing={3} sx={{ mt: 3 }}>\n            {jobs.map((job) => (\n                <Grid item xs={12} sm={6} md={4} key={job._id}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h6\">{job.title}</Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                {job.description}\n                            </Typography>\n                            <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>\n                                Location: {job.location}\n                            </Typography>\n                            <Typography variant=\"subtitle2\">\n                                Hourly Rate: ${job.hourlyRate}\n                            </Typography>\n                            <Button\n                                component={Link}\n                                to={`/jobs/${job._id}`}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                sx={{ mt: 2 }}\n                            >\n                                View Details\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}